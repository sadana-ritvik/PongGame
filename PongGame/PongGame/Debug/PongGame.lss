
PongGame.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000043c  00800100  00000b04  00000b98  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000b04  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  0080053c  0080053c  00000fd4  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000fd4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001030  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000f0  00000000  00000000  00001070  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000190c  00000000  00000000  00001160  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a22  00000000  00000000  00002a6c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000a1c  00000000  00000000  0000348e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000390  00000000  00000000  00003eac  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000569  00000000  00000000  0000423c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000128f  00000000  00000000  000047a5  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000d0  00000000  00000000  00005a34  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	15 e0       	ldi	r17, 0x05	; 5
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e4 e0       	ldi	r30, 0x04	; 4
  7c:	fb e0       	ldi	r31, 0x0B	; 11
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	ac 33       	cpi	r26, 0x3C	; 60
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	25 e0       	ldi	r18, 0x05	; 5
  8c:	ac e3       	ldi	r26, 0x3C	; 60
  8e:	b5 e0       	ldi	r27, 0x05	; 5
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a6 34       	cpi	r26, 0x46	; 70
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 50 02 	call	0x4a0	; 0x4a0 <main>
  9e:	0c 94 80 05 	jmp	0xb00	; 0xb00 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <lcd_command>:
	drawline(buff, x, y, x+w, y, color);
	drawline(buff, x, y, x, y+h, color);
	drawline(buff, x+w, y, x+w, y+h, color);
	drawline(buff, x, y+h, x+w, y+h, color);
	
}
  a6:	5c 98       	cbi	0x0b, 4	; 11
  a8:	27 e0       	ldi	r18, 0x07	; 7
  aa:	30 e0       	ldi	r19, 0x00	; 0
  ac:	90 e0       	ldi	r25, 0x00	; 0
  ae:	5d 98       	cbi	0x0b, 5	; 11
  b0:	ac 01       	movw	r20, r24
  b2:	02 2e       	mov	r0, r18
  b4:	02 c0       	rjmp	.+4      	; 0xba <lcd_command+0x14>
  b6:	55 95       	asr	r21
  b8:	47 95       	ror	r20
  ba:	0a 94       	dec	r0
  bc:	e2 f7       	brpl	.-8      	; 0xb6 <lcd_command+0x10>
  be:	40 ff       	sbrs	r20, 0
  c0:	02 c0       	rjmp	.+4      	; 0xc6 <lcd_command+0x20>
  c2:	5e 9a       	sbi	0x0b, 6	; 11
  c4:	01 c0       	rjmp	.+2      	; 0xc8 <lcd_command+0x22>
  c6:	5e 98       	cbi	0x0b, 6	; 11
  c8:	5d 9a       	sbi	0x0b, 5	; 11
  ca:	21 50       	subi	r18, 0x01	; 1
  cc:	31 09       	sbc	r19, r1
  ce:	78 f7       	brcc	.-34     	; 0xae <lcd_command+0x8>
  d0:	08 95       	ret

000000d2 <lcd_init>:
  d2:	56 9a       	sbi	0x0a, 6	; 10
  d4:	55 9a       	sbi	0x0a, 5	; 10
  d6:	54 9a       	sbi	0x0a, 4	; 10
  d8:	53 9a       	sbi	0x0a, 3	; 10
  da:	52 9a       	sbi	0x0a, 2	; 10
  dc:	5a 98       	cbi	0x0b, 2	; 11
  de:	5b 98       	cbi	0x0b, 3	; 11
  e0:	2f ef       	ldi	r18, 0xFF	; 255
  e2:	89 e6       	ldi	r24, 0x69	; 105
  e4:	98 e1       	ldi	r25, 0x18	; 24
  e6:	21 50       	subi	r18, 0x01	; 1
  e8:	80 40       	sbci	r24, 0x00	; 0
  ea:	90 40       	sbci	r25, 0x00	; 0
  ec:	e1 f7       	brne	.-8      	; 0xe6 <lcd_init+0x14>
  ee:	00 c0       	rjmp	.+0      	; 0xf0 <lcd_init+0x1e>
  f0:	00 00       	nop
  f2:	5b 9a       	sbi	0x0b, 3	; 11
  f4:	83 ea       	ldi	r24, 0xA3	; 163
  f6:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_command>
  fa:	80 ea       	ldi	r24, 0xA0	; 160
  fc:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_command>
 100:	80 ec       	ldi	r24, 0xC0	; 192
 102:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_command>
 106:	80 e4       	ldi	r24, 0x40	; 64
 108:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_command>
 10c:	8c e2       	ldi	r24, 0x2C	; 44
 10e:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_command>
 112:	2f ef       	ldi	r18, 0xFF	; 255
 114:	80 e7       	ldi	r24, 0x70	; 112
 116:	92 e0       	ldi	r25, 0x02	; 2
 118:	21 50       	subi	r18, 0x01	; 1
 11a:	80 40       	sbci	r24, 0x00	; 0
 11c:	90 40       	sbci	r25, 0x00	; 0
 11e:	e1 f7       	brne	.-8      	; 0x118 <lcd_init+0x46>
 120:	00 c0       	rjmp	.+0      	; 0x122 <lcd_init+0x50>
 122:	00 00       	nop
 124:	8e e2       	ldi	r24, 0x2E	; 46
 126:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_command>
 12a:	2f ef       	ldi	r18, 0xFF	; 255
 12c:	80 e7       	ldi	r24, 0x70	; 112
 12e:	92 e0       	ldi	r25, 0x02	; 2
 130:	21 50       	subi	r18, 0x01	; 1
 132:	80 40       	sbci	r24, 0x00	; 0
 134:	90 40       	sbci	r25, 0x00	; 0
 136:	e1 f7       	brne	.-8      	; 0x130 <lcd_init+0x5e>
 138:	00 c0       	rjmp	.+0      	; 0x13a <lcd_init+0x68>
 13a:	00 00       	nop
 13c:	8f e2       	ldi	r24, 0x2F	; 47
 13e:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_command>
 142:	8f e3       	ldi	r24, 0x3F	; 63
 144:	9c e9       	ldi	r25, 0x9C	; 156
 146:	01 97       	sbiw	r24, 0x01	; 1
 148:	f1 f7       	brne	.-4      	; 0x146 <lcd_init+0x74>
 14a:	00 c0       	rjmp	.+0      	; 0x14c <lcd_init+0x7a>
 14c:	00 00       	nop
 14e:	86 e2       	ldi	r24, 0x26	; 38
 150:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_command>
 154:	08 95       	ret

00000156 <lcd_data>:
 156:	5c 9a       	sbi	0x0b, 4	; 11
 158:	27 e0       	ldi	r18, 0x07	; 7
 15a:	30 e0       	ldi	r19, 0x00	; 0
 15c:	90 e0       	ldi	r25, 0x00	; 0
 15e:	5d 98       	cbi	0x0b, 5	; 11
 160:	ac 01       	movw	r20, r24
 162:	02 2e       	mov	r0, r18
 164:	02 c0       	rjmp	.+4      	; 0x16a <lcd_data+0x14>
 166:	55 95       	asr	r21
 168:	47 95       	ror	r20
 16a:	0a 94       	dec	r0
 16c:	e2 f7       	brpl	.-8      	; 0x166 <lcd_data+0x10>
 16e:	40 ff       	sbrs	r20, 0
 170:	02 c0       	rjmp	.+4      	; 0x176 <lcd_data+0x20>
 172:	5e 9a       	sbi	0x0b, 6	; 11
 174:	01 c0       	rjmp	.+2      	; 0x178 <lcd_data+0x22>
 176:	5e 98       	cbi	0x0b, 6	; 11
 178:	5d 9a       	sbi	0x0b, 5	; 11
 17a:	21 50       	subi	r18, 0x01	; 1
 17c:	31 09       	sbc	r19, r1
 17e:	78 f7       	brcc	.-34     	; 0x15e <lcd_data+0x8>
 180:	08 95       	ret

00000182 <lcd_set_brightness>:
 182:	cf 93       	push	r28
 184:	c8 2f       	mov	r28, r24
 186:	81 e8       	ldi	r24, 0x81	; 129
 188:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_command>
 18c:	8c 2f       	mov	r24, r28
 18e:	8f 73       	andi	r24, 0x3F	; 63
 190:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_command>
 194:	cf 91       	pop	r28
 196:	08 95       	ret

00000198 <write_buffer>:
 198:	cf 92       	push	r12
 19a:	df 92       	push	r13
 19c:	ef 92       	push	r14
 19e:	ff 92       	push	r15
 1a0:	0f 93       	push	r16
 1a2:	1f 93       	push	r17
 1a4:	cf 93       	push	r28
 1a6:	df 93       	push	r29
 1a8:	0f 2e       	mov	r0, r31
 1aa:	f0 e0       	ldi	r31, 0x00	; 0
 1ac:	ef 2e       	mov	r14, r31
 1ae:	f5 e0       	ldi	r31, 0x05	; 5
 1b0:	ff 2e       	mov	r15, r31
 1b2:	f0 2d       	mov	r31, r0
 1b4:	ec 01       	movw	r28, r24
 1b6:	0f 2e       	mov	r0, r31
 1b8:	f0 e1       	ldi	r31, 0x10	; 16
 1ba:	cf 2e       	mov	r12, r31
 1bc:	f5 e0       	ldi	r31, 0x05	; 5
 1be:	df 2e       	mov	r13, r31
 1c0:	f0 2d       	mov	r31, r0
 1c2:	f7 01       	movw	r30, r14
 1c4:	80 81       	ld	r24, Z
 1c6:	f2 e0       	ldi	r31, 0x02	; 2
 1c8:	ef 0e       	add	r14, r31
 1ca:	f1 1c       	adc	r15, r1
 1cc:	80 6b       	ori	r24, 0xB0	; 176
 1ce:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_command>
 1d2:	80 e0       	ldi	r24, 0x00	; 0
 1d4:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_command>
 1d8:	80 e1       	ldi	r24, 0x10	; 16
 1da:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_command>
 1de:	80 ee       	ldi	r24, 0xE0	; 224
 1e0:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_command>
 1e4:	8f ef       	ldi	r24, 0xFF	; 255
 1e6:	0e 94 ab 00 	call	0x156	; 0x156 <lcd_data>
 1ea:	8e 01       	movw	r16, r28
 1ec:	00 58       	subi	r16, 0x80	; 128
 1ee:	1f 4f       	sbci	r17, 0xFF	; 255
 1f0:	89 91       	ld	r24, Y+
 1f2:	0e 94 ab 00 	call	0x156	; 0x156 <lcd_data>
 1f6:	c0 17       	cp	r28, r16
 1f8:	d1 07       	cpc	r29, r17
 1fa:	d1 f7       	brne	.-12     	; 0x1f0 <write_buffer+0x58>
 1fc:	e8 01       	movw	r28, r16
 1fe:	ce 14       	cp	r12, r14
 200:	df 04       	cpc	r13, r15
 202:	f9 f6       	brne	.-66     	; 0x1c2 <write_buffer+0x2a>
 204:	df 91       	pop	r29
 206:	cf 91       	pop	r28
 208:	1f 91       	pop	r17
 20a:	0f 91       	pop	r16
 20c:	ff 90       	pop	r15
 20e:	ef 90       	pop	r14
 210:	df 90       	pop	r13
 212:	cf 90       	pop	r12
 214:	08 95       	ret

00000216 <clear_buffer>:
 216:	20 e0       	ldi	r18, 0x00	; 0
 218:	34 e0       	ldi	r19, 0x04	; 4
 21a:	fc 01       	movw	r30, r24
 21c:	a9 01       	movw	r20, r18
 21e:	11 92       	st	Z+, r1
 220:	41 50       	subi	r20, 0x01	; 1
 222:	50 40       	sbci	r21, 0x00	; 0
 224:	e1 f7       	brne	.-8      	; 0x21e <clear_buffer+0x8>
 226:	08 95       	ret

00000228 <setpixel>:
 228:	34 2f       	mov	r19, r20
 22a:	36 95       	lsr	r19
 22c:	36 95       	lsr	r19
 22e:	36 95       	lsr	r19
 230:	e6 2f       	mov	r30, r22
 232:	f0 e0       	ldi	r31, 0x00	; 0
 234:	50 e8       	ldi	r21, 0x80	; 128
 236:	35 9f       	mul	r19, r21
 238:	e0 0d       	add	r30, r0
 23a:	f1 1d       	adc	r31, r1
 23c:	11 24       	eor	r1, r1
 23e:	e8 0f       	add	r30, r24
 240:	f9 1f       	adc	r31, r25
 242:	30 e0       	ldi	r19, 0x00	; 0
 244:	50 e0       	ldi	r21, 0x00	; 0
 246:	40 95       	com	r20
 248:	50 95       	com	r21
 24a:	47 70       	andi	r20, 0x07	; 7
 24c:	55 27       	eor	r21, r21
 24e:	02 c0       	rjmp	.+4      	; 0x254 <setpixel+0x2c>
 250:	22 0f       	add	r18, r18
 252:	33 1f       	adc	r19, r19
 254:	4a 95       	dec	r20
 256:	e2 f7       	brpl	.-8      	; 0x250 <setpixel+0x28>
 258:	80 81       	ld	r24, Z
 25a:	28 2b       	or	r18, r24
 25c:	20 83       	st	Z, r18
 25e:	08 95       	ret

00000260 <drawcircle>:


// function to draw a circle
// algo taken from wikipedia
void drawcircle(uint8_t *buff,uint8_t x0, uint8_t y0, uint8_t r,uint8_t color) {
 260:	2f 92       	push	r2
 262:	3f 92       	push	r3
 264:	4f 92       	push	r4
 266:	5f 92       	push	r5
 268:	6f 92       	push	r6
 26a:	7f 92       	push	r7
 26c:	8f 92       	push	r8
 26e:	9f 92       	push	r9
 270:	af 92       	push	r10
 272:	bf 92       	push	r11
 274:	cf 92       	push	r12
 276:	df 92       	push	r13
 278:	ef 92       	push	r14
 27a:	ff 92       	push	r15
 27c:	0f 93       	push	r16
 27e:	1f 93       	push	r17
 280:	cf 93       	push	r28
 282:	df 93       	push	r29
 284:	00 d0       	rcall	.+0      	; 0x286 <drawcircle+0x26>
 286:	00 d0       	rcall	.+0      	; 0x288 <drawcircle+0x28>
 288:	00 d0       	rcall	.+0      	; 0x28a <drawcircle+0x2a>
 28a:	cd b7       	in	r28, 0x3d	; 61
 28c:	de b7       	in	r29, 0x3e	; 62
	
	int x = r-1;
 28e:	30 e0       	ldi	r19, 0x00	; 0
 290:	79 01       	movw	r14, r18
 292:	51 e0       	ldi	r21, 0x01	; 1
 294:	e5 1a       	sub	r14, r21
 296:	f1 08       	sbc	r15, r1
    int y = 0;
    int dx = 1;
    int dy = 1;
    int err = dx - (r << 1);
 298:	f9 01       	movw	r30, r18
 29a:	ee 0f       	add	r30, r30
 29c:	ff 1f       	adc	r31, r31
 29e:	fa 83       	std	Y+2, r31	; 0x02
 2a0:	e9 83       	std	Y+1, r30	; 0x01
 2a2:	21 e0       	ldi	r18, 0x01	; 1
 2a4:	30 e0       	ldi	r19, 0x00	; 0
 2a6:	59 01       	movw	r10, r18
 2a8:	ae 1a       	sub	r10, r30
 2aa:	bf 0a       	sbc	r11, r31

    while (x >= y)
 2ac:	ff 20       	and	r15, r15
 2ae:	0c f4       	brge	.+2      	; 0x2b2 <drawcircle+0x52>
 2b0:	74 c0       	rjmp	.+232    	; 0x39a <drawcircle+0x13a>
 2b2:	24 2e       	mov	r2, r20
 2b4:	36 2e       	mov	r3, r22
 2b6:	9e 83       	std	Y+6, r25	; 0x06
 2b8:	8d 83       	std	Y+5, r24	; 0x05
 2ba:	3c 83       	std	Y+4, r19	; 0x04
 2bc:	2b 83       	std	Y+3, r18	; 0x03
 2be:	88 24       	eor	r8, r8
 2c0:	83 94       	inc	r8
 2c2:	91 2c       	mov	r9, r1
 2c4:	c1 2c       	mov	r12, r1
 2c6:	d1 2c       	mov	r13, r1
    {
        setpixel(buff,x0 + x, y0 + y,color);
 2c8:	20 2f       	mov	r18, r16
 2ca:	72 2c       	mov	r7, r2
 2cc:	7c 0c       	add	r7, r12
 2ce:	47 2d       	mov	r20, r7
 2d0:	13 2d       	mov	r17, r3
 2d2:	1e 0d       	add	r17, r14
 2d4:	61 2f       	mov	r22, r17
 2d6:	8d 81       	ldd	r24, Y+5	; 0x05
 2d8:	9e 81       	ldd	r25, Y+6	; 0x06
 2da:	0e 94 14 01 	call	0x228	; 0x228 <setpixel>
        setpixel(buff,x0 + y, y0 + x,color);
 2de:	20 2f       	mov	r18, r16
 2e0:	52 2c       	mov	r5, r2
 2e2:	5e 0c       	add	r5, r14
 2e4:	45 2d       	mov	r20, r5
 2e6:	63 2c       	mov	r6, r3
 2e8:	6c 0c       	add	r6, r12
 2ea:	66 2d       	mov	r22, r6
 2ec:	8d 81       	ldd	r24, Y+5	; 0x05
 2ee:	9e 81       	ldd	r25, Y+6	; 0x06
 2f0:	0e 94 14 01 	call	0x228	; 0x228 <setpixel>
        setpixel(buff,x0 - y, y0 + x,color);
 2f4:	20 2f       	mov	r18, r16
 2f6:	45 2d       	mov	r20, r5
 2f8:	43 2c       	mov	r4, r3
 2fa:	4c 18       	sub	r4, r12
 2fc:	64 2d       	mov	r22, r4
 2fe:	8d 81       	ldd	r24, Y+5	; 0x05
 300:	9e 81       	ldd	r25, Y+6	; 0x06
 302:	0e 94 14 01 	call	0x228	; 0x228 <setpixel>
        setpixel(buff,x0 - x, y0 + y,color);
 306:	20 2f       	mov	r18, r16
 308:	47 2d       	mov	r20, r7
 30a:	53 2c       	mov	r5, r3
 30c:	5e 18       	sub	r5, r14
 30e:	65 2d       	mov	r22, r5
 310:	8d 81       	ldd	r24, Y+5	; 0x05
 312:	9e 81       	ldd	r25, Y+6	; 0x06
 314:	0e 94 14 01 	call	0x228	; 0x228 <setpixel>
        setpixel(buff,x0 - x, y0 - y,color);
 318:	20 2f       	mov	r18, r16
 31a:	72 2c       	mov	r7, r2
 31c:	7c 18       	sub	r7, r12
 31e:	47 2d       	mov	r20, r7
 320:	65 2d       	mov	r22, r5
 322:	8d 81       	ldd	r24, Y+5	; 0x05
 324:	9e 81       	ldd	r25, Y+6	; 0x06
 326:	0e 94 14 01 	call	0x228	; 0x228 <setpixel>
        setpixel(buff,x0 - y, y0 - x,color);
 32a:	20 2f       	mov	r18, r16
 32c:	52 2c       	mov	r5, r2
 32e:	5e 18       	sub	r5, r14
 330:	45 2d       	mov	r20, r5
 332:	64 2d       	mov	r22, r4
 334:	8d 81       	ldd	r24, Y+5	; 0x05
 336:	9e 81       	ldd	r25, Y+6	; 0x06
 338:	0e 94 14 01 	call	0x228	; 0x228 <setpixel>
        setpixel(buff,x0 + y, y0 - x,color);
 33c:	20 2f       	mov	r18, r16
 33e:	45 2d       	mov	r20, r5
 340:	66 2d       	mov	r22, r6
 342:	8d 81       	ldd	r24, Y+5	; 0x05
 344:	9e 81       	ldd	r25, Y+6	; 0x06
 346:	0e 94 14 01 	call	0x228	; 0x228 <setpixel>
        setpixel(buff,x0 + x, y0 - y,color);
 34a:	20 2f       	mov	r18, r16
 34c:	47 2d       	mov	r20, r7
 34e:	61 2f       	mov	r22, r17
 350:	8d 81       	ldd	r24, Y+5	; 0x05
 352:	9e 81       	ldd	r25, Y+6	; 0x06
 354:	0e 94 14 01 	call	0x228	; 0x228 <setpixel>

        if (err <= 0)
 358:	1a 14       	cp	r1, r10
 35a:	1b 04       	cpc	r1, r11
 35c:	6c f0       	brlt	.+26     	; 0x378 <drawcircle+0x118>
        {
            y++;
 35e:	3f ef       	ldi	r19, 0xFF	; 255
 360:	c3 1a       	sub	r12, r19
 362:	d3 0a       	sbc	r13, r19
            err += dy;
 364:	8b 81       	ldd	r24, Y+3	; 0x03
 366:	9c 81       	ldd	r25, Y+4	; 0x04
 368:	a8 0e       	add	r10, r24
 36a:	b9 1e       	adc	r11, r25
            dy += 2;
 36c:	02 96       	adiw	r24, 0x02	; 2
 36e:	9c 83       	std	Y+4, r25	; 0x04
 370:	8b 83       	std	Y+3, r24	; 0x03
        }
        
        if (err > 0)
 372:	1a 14       	cp	r1, r10
 374:	1b 04       	cpc	r1, r11
 376:	6c f4       	brge	.+26     	; 0x392 <drawcircle+0x132>
        {
            x--;
 378:	91 e0       	ldi	r25, 0x01	; 1
 37a:	e9 1a       	sub	r14, r25
 37c:	f1 08       	sbc	r15, r1
            dx += 2;
 37e:	e2 e0       	ldi	r30, 0x02	; 2
 380:	8e 0e       	add	r8, r30
 382:	91 1c       	adc	r9, r1
            err += dx - (r << 1);
 384:	c4 01       	movw	r24, r8
 386:	29 81       	ldd	r18, Y+1	; 0x01
 388:	3a 81       	ldd	r19, Y+2	; 0x02
 38a:	82 1b       	sub	r24, r18
 38c:	93 0b       	sbc	r25, r19
 38e:	a8 0e       	add	r10, r24
 390:	b9 1e       	adc	r11, r25
    int y = 0;
    int dx = 1;
    int dy = 1;
    int err = dx - (r << 1);

    while (x >= y)
 392:	ec 14       	cp	r14, r12
 394:	fd 04       	cpc	r15, r13
 396:	0c f0       	brlt	.+2      	; 0x39a <drawcircle+0x13a>
 398:	97 cf       	rjmp	.-210    	; 0x2c8 <drawcircle+0x68>
            dx += 2;
            err += dx - (r << 1);
        }
    }
	
}
 39a:	26 96       	adiw	r28, 0x06	; 6
 39c:	0f b6       	in	r0, 0x3f	; 63
 39e:	f8 94       	cli
 3a0:	de bf       	out	0x3e, r29	; 62
 3a2:	0f be       	out	0x3f, r0	; 63
 3a4:	cd bf       	out	0x3d, r28	; 61
 3a6:	df 91       	pop	r29
 3a8:	cf 91       	pop	r28
 3aa:	1f 91       	pop	r17
 3ac:	0f 91       	pop	r16
 3ae:	ff 90       	pop	r15
 3b0:	ef 90       	pop	r14
 3b2:	df 90       	pop	r13
 3b4:	cf 90       	pop	r12
 3b6:	bf 90       	pop	r11
 3b8:	af 90       	pop	r10
 3ba:	9f 90       	pop	r9
 3bc:	8f 90       	pop	r8
 3be:	7f 90       	pop	r7
 3c0:	6f 90       	pop	r6
 3c2:	5f 90       	pop	r5
 3c4:	4f 90       	pop	r4
 3c6:	3f 90       	pop	r3
 3c8:	2f 90       	pop	r2
 3ca:	08 95       	ret

000003cc <uart_putchar>:
void uart_init(void);

static FILE uart_output = FDEV_SETUP_STREAM(uart_putchar, NULL, _FDEV_SETUP_WRITE);
static FILE uart_input = FDEV_SETUP_STREAM(NULL, uart_getchar, _FDEV_SETUP_READ);

int uart_putchar(char c, FILE *stream) {
 3cc:	cf 93       	push	r28
 3ce:	c8 2f       	mov	r28, r24
	if (c == '\n') {
 3d0:	8a 30       	cpi	r24, 0x0A	; 10
 3d2:	19 f4       	brne	.+6      	; 0x3da <uart_putchar+0xe>
		uart_putchar('\r', stream);
 3d4:	8d e0       	ldi	r24, 0x0D	; 13
 3d6:	0e 94 e6 01 	call	0x3cc	; 0x3cc <uart_putchar>
	}
	loop_until_bit_is_set(UCSR0A, UDRE0);
 3da:	e0 ec       	ldi	r30, 0xC0	; 192
 3dc:	f0 e0       	ldi	r31, 0x00	; 0
 3de:	80 81       	ld	r24, Z
 3e0:	85 ff       	sbrs	r24, 5
 3e2:	fd cf       	rjmp	.-6      	; 0x3de <uart_putchar+0x12>
	UDR0 = c;
 3e4:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	return 0;
}
 3e8:	80 e0       	ldi	r24, 0x00	; 0
 3ea:	90 e0       	ldi	r25, 0x00	; 0
 3ec:	cf 91       	pop	r28
 3ee:	08 95       	ret

000003f0 <uart_getchar>:

int uart_getchar(FILE *stream) {
	loop_until_bit_is_set(UCSR0A, RXC0); /* Wait until data exists. */
 3f0:	e0 ec       	ldi	r30, 0xC0	; 192
 3f2:	f0 e0       	ldi	r31, 0x00	; 0
 3f4:	80 81       	ld	r24, Z
 3f6:	88 23       	and	r24, r24
 3f8:	ec f7       	brge	.-6      	; 0x3f4 <uart_getchar+0x4>
	return UDR0;
 3fa:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
}
 3fe:	90 e0       	ldi	r25, 0x00	; 0
 400:	08 95       	ret

00000402 <uart_init>:

void uart_init(void) {
	UBRR0H = UBRRH_VALUE;
 402:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = UBRRL_VALUE;
 406:	87 e6       	ldi	r24, 0x67	; 103
 408:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>

	#if USE_2X
	UCSR0A |= _BV(U2X0);
	#else
	UCSR0A &= ~(_BV(U2X0));
 40c:	e0 ec       	ldi	r30, 0xC0	; 192
 40e:	f0 e0       	ldi	r31, 0x00	; 0
 410:	80 81       	ld	r24, Z
 412:	8d 7f       	andi	r24, 0xFD	; 253
 414:	80 83       	st	Z, r24
	#endif

	UCSR0C = _BV(UCSZ01) | _BV(UCSZ00); /* 8-bit data */
 416:	86 e0       	ldi	r24, 0x06	; 6
 418:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
	UCSR0B = _BV(RXEN0) | _BV(TXEN0);   /* Enable RX and TX */
 41c:	88 e1       	ldi	r24, 0x18	; 24
 41e:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>

    // Redirect stdin and stdout so functions like printf and getchar work.
	stdout = &uart_output;
 422:	e0 e4       	ldi	r30, 0x40	; 64
 424:	f5 e0       	ldi	r31, 0x05	; 5
 426:	8e e1       	ldi	r24, 0x1E	; 30
 428:	95 e0       	ldi	r25, 0x05	; 5
 42a:	93 83       	std	Z+3, r25	; 0x03
 42c:	82 83       	std	Z+2, r24	; 0x02
	stdin = &uart_input;
 42e:	80 e1       	ldi	r24, 0x10	; 16
 430:	95 e0       	ldi	r25, 0x05	; 5
 432:	91 83       	std	Z+1, r25	; 0x01
 434:	80 83       	st	Z, r24
 436:	08 95       	ret

00000438 <setupADC>:
uint16_t x_coor;
uint16_t y_coor;

void setupADC(void){

	ADMUX |= (1 << REFS0); 	// Setting ADC to use VCC as reference voltage
 438:	ec e7       	ldi	r30, 0x7C	; 124
 43a:	f0 e0       	ldi	r31, 0x00	; 0
 43c:	80 81       	ld	r24, Z
 43e:	80 64       	ori	r24, 0x40	; 64
 440:	80 83       	st	Z, r24
	//  Use A0 pin to read input

	ADCSRA |= (1 << ADATE) | (1 << ADEN) | (1<< ADPS1) | (1 << ADPS2) | (1 << ADPS0); // Turn ADC on,
 442:	ea e7       	ldi	r30, 0x7A	; 122
 444:	f0 e0       	ldi	r31, 0x00	; 0
 446:	80 81       	ld	r24, Z
 448:	87 6a       	ori	r24, 0xA7	; 167
 44a:	80 83       	st	Z, r24
														 //  Use pre-scaler as 4
														 //  Set auto-trigger.
	DIDR0 |= 1 << ADC0D;
 44c:	ee e7       	ldi	r30, 0x7E	; 126
 44e:	f0 e0       	ldi	r31, 0x00	; 0
 450:	80 81       	ld	r24, Z
 452:	81 60       	ori	r24, 0x01	; 1
 454:	80 83       	st	Z, r24
 456:	08 95       	ret

00000458 <adcStartConversion>:
}

void adcStartConversion(void){
	ADCSRA |= (1 << ADSC);
 458:	ea e7       	ldi	r30, 0x7A	; 122
 45a:	f0 e0       	ldi	r31, 0x00	; 0
 45c:	80 81       	ld	r24, Z
 45e:	80 64       	ori	r24, 0x40	; 64
 460:	80 83       	st	Z, r24
 462:	08 95       	ret

00000464 <getADCval>:
	//ADMUX &= ~(1 << MUX3);
	
	// Set Y- Y+ to ADC input.
	//ADMUX |= 0xf0;
	// Set X- , X+ to digital pins.
	DDRC  = (1 << PORTC1) | (1 << PORTC3);
 464:	8a e0       	ldi	r24, 0x0A	; 10
 466:	87 b9       	out	0x07, r24	; 7
	// Set X- high and X+ low.
	PORTC |= (1 << PORTC3);
 468:	43 9a       	sbi	0x08, 3	; 8
	PORTC &= ~(1 << PORTC1);
 46a:	41 98       	cbi	0x08, 1	; 8
	
	// Read the x_coor here.
	x_coor = ADC;
 46c:	e8 e7       	ldi	r30, 0x78	; 120
 46e:	f0 e0       	ldi	r31, 0x00	; 0
 470:	80 81       	ld	r24, Z
 472:	91 81       	ldd	r25, Z+1	; 0x01
 474:	90 93 3f 05 	sts	0x053F, r25	; 0x80053f <x_coor+0x1>
 478:	80 93 3e 05 	sts	0x053E, r24	; 0x80053e <x_coor>
	
	PORTC &= ~(1<< PORTC3);
 47c:	43 98       	cbi	0x08, 3	; 8
	// Now set configuration for the y_coor.
	
	// Set Y-, Y+ to digital pins.
	DDRC = (1 << PORTC0) | (1 << PORTC2);
 47e:	85 e0       	ldi	r24, 0x05	; 5
 480:	87 b9       	out	0x07, r24	; 7
	// Set Y- high, Y+ low.
	PORTC |= (1 << PORTC0);
 482:	40 9a       	sbi	0x08, 0	; 8
	PORTC &= ~(1 << PORTC2);
 484:	42 98       	cbi	0x08, 2	; 8
	
	// Set X- X+ to ADC input.
	ADMUX |= (1 << MUX0) | (1 << MUX1);
 486:	ac e7       	ldi	r26, 0x7C	; 124
 488:	b0 e0       	ldi	r27, 0x00	; 0
 48a:	8c 91       	ld	r24, X
 48c:	83 60       	ori	r24, 0x03	; 3
 48e:	8c 93       	st	X, r24
	
	// Read the y_coor here.
	y_coor = ADC;
 490:	80 81       	ld	r24, Z
 492:	91 81       	ldd	r25, Z+1	; 0x01
 494:	90 93 3d 05 	sts	0x053D, r25	; 0x80053d <__data_end+0x1>
 498:	80 93 3c 05 	sts	0x053C, r24	; 0x80053c <__data_end>
	PORTC &= ~(1<<PORTC0);
 49c:	40 98       	cbi	0x08, 0	; 8
 49e:	08 95       	ret

000004a0 <main>:
}

int main(void)
{
	//setting up the gpio for backlight
	DDRD |= 0x80;
 4a0:	57 9a       	sbi	0x0a, 7	; 10
	PORTD &= ~0x80;
 4a2:	5f 98       	cbi	0x0b, 7	; 11
	PORTD |= 0x00;
 4a4:	8b b1       	in	r24, 0x0b	; 11
 4a6:	8b b9       	out	0x0b, r24	; 11
	
	DDRB |= 0x05;
 4a8:	84 b1       	in	r24, 0x04	; 4
 4aa:	85 60       	ori	r24, 0x05	; 5
 4ac:	84 b9       	out	0x04, r24	; 4
	PORTB &= ~0x05;
 4ae:	85 b1       	in	r24, 0x05	; 5
 4b0:	8a 7f       	andi	r24, 0xFA	; 250
 4b2:	85 b9       	out	0x05, r24	; 5
	PORTB |= 0x00;
 4b4:	85 b1       	in	r24, 0x05	; 5
 4b6:	85 b9       	out	0x05, r24	; 5
	
	//lcd initialisation
	lcd_init();
 4b8:	0e 94 69 00 	call	0xd2	; 0xd2 <lcd_init>
	lcd_command(CMD_DISPLAY_ON);
 4bc:	8f ea       	ldi	r24, 0xAF	; 175
 4be:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_command>
	lcd_set_brightness(0x18);
 4c2:	88 e1       	ldi	r24, 0x18	; 24
 4c4:	0e 94 c1 00 	call	0x182	; 0x182 <lcd_set_brightness>
	write_buffer(buff);
 4c8:	80 e0       	ldi	r24, 0x00	; 0
 4ca:	91 e0       	ldi	r25, 0x01	; 1
 4cc:	0e 94 cc 00 	call	0x198	; 0x198 <write_buffer>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 4d0:	2f ef       	ldi	r18, 0xFF	; 255
 4d2:	83 ed       	ldi	r24, 0xD3	; 211
 4d4:	90 e3       	ldi	r25, 0x30	; 48
 4d6:	21 50       	subi	r18, 0x01	; 1
 4d8:	80 40       	sbci	r24, 0x00	; 0
 4da:	90 40       	sbci	r25, 0x00	; 0
 4dc:	e1 f7       	brne	.-8      	; 0x4d6 <main+0x36>
 4de:	00 c0       	rjmp	.+0      	; 0x4e0 <main+0x40>
 4e0:	00 00       	nop
	_delay_ms(1000);
	clear_buffer(buff);
 4e2:	80 e0       	ldi	r24, 0x00	; 0
 4e4:	91 e0       	ldi	r25, 0x01	; 1
 4e6:	0e 94 0b 01 	call	0x216	; 0x216 <clear_buffer>
	
	uart_init();
 4ea:	0e 94 01 02 	call	0x402	; 0x402 <uart_init>
	
	setupADC();
 4ee:	0e 94 1c 02 	call	0x438	; 0x438 <setupADC>
	adcStartConversion();
 4f2:	0e 94 2c 02 	call	0x458	; 0x458 <adcStartConversion>

		write_buffer(buff);
		getADCval();
		
		//uint16_t f = ADC;
		printf("x: %u, y: %u \n", x_coor, y_coor);
 4f6:	cc e2       	ldi	r28, 0x2C	; 44
 4f8:	d5 e0       	ldi	r29, 0x05	; 5
// 		drawstring(buff, 0, 2, word);
		
//		drawrect(buff, 0,0, 80, 60, BLACK);
//		fillrect(buff, 0,0, 80, 60, BLACK);

		drawcircle(buff, 15, 15, 8, BLACK);
 4fa:	01 e0       	ldi	r16, 0x01	; 1
 4fc:	28 e0       	ldi	r18, 0x08	; 8
 4fe:	4f e0       	ldi	r20, 0x0F	; 15
 500:	6f e0       	ldi	r22, 0x0F	; 15
 502:	80 e0       	ldi	r24, 0x00	; 0
 504:	91 e0       	ldi	r25, 0x01	; 1
 506:	0e 94 30 01 	call	0x260	; 0x260 <drawcircle>

		write_buffer(buff);
 50a:	80 e0       	ldi	r24, 0x00	; 0
 50c:	91 e0       	ldi	r25, 0x01	; 1
 50e:	0e 94 cc 00 	call	0x198	; 0x198 <write_buffer>
		getADCval();
 512:	0e 94 32 02 	call	0x464	; 0x464 <getADCval>
		
		//uint16_t f = ADC;
		printf("x: %u, y: %u \n", x_coor, y_coor);
 516:	80 91 3d 05 	lds	r24, 0x053D	; 0x80053d <__data_end+0x1>
 51a:	8f 93       	push	r24
 51c:	80 91 3c 05 	lds	r24, 0x053C	; 0x80053c <__data_end>
 520:	8f 93       	push	r24
 522:	80 91 3f 05 	lds	r24, 0x053F	; 0x80053f <x_coor+0x1>
 526:	8f 93       	push	r24
 528:	80 91 3e 05 	lds	r24, 0x053E	; 0x80053e <x_coor>
 52c:	8f 93       	push	r24
 52e:	df 93       	push	r29
 530:	cf 93       	push	r28
 532:	0e 94 a2 02 	call	0x544	; 0x544 <printf>
 536:	0f 90       	pop	r0
 538:	0f 90       	pop	r0
 53a:	0f 90       	pop	r0
 53c:	0f 90       	pop	r0
 53e:	0f 90       	pop	r0
 540:	0f 90       	pop	r0
 542:	db cf       	rjmp	.-74     	; 0x4fa <main+0x5a>

00000544 <printf>:
 544:	a0 e0       	ldi	r26, 0x00	; 0
 546:	b0 e0       	ldi	r27, 0x00	; 0
 548:	e8 ea       	ldi	r30, 0xA8	; 168
 54a:	f2 e0       	ldi	r31, 0x02	; 2
 54c:	0c 94 59 05 	jmp	0xab2	; 0xab2 <__prologue_saves__+0x20>
 550:	ae 01       	movw	r20, r28
 552:	4b 5f       	subi	r20, 0xFB	; 251
 554:	5f 4f       	sbci	r21, 0xFF	; 255
 556:	fa 01       	movw	r30, r20
 558:	61 91       	ld	r22, Z+
 55a:	71 91       	ld	r23, Z+
 55c:	af 01       	movw	r20, r30
 55e:	80 91 42 05 	lds	r24, 0x0542	; 0x800542 <__iob+0x2>
 562:	90 91 43 05 	lds	r25, 0x0543	; 0x800543 <__iob+0x3>
 566:	0e 94 b8 02 	call	0x570	; 0x570 <vfprintf>
 56a:	e2 e0       	ldi	r30, 0x02	; 2
 56c:	0c 94 75 05 	jmp	0xaea	; 0xaea <__epilogue_restores__+0x20>

00000570 <vfprintf>:
 570:	ab e0       	ldi	r26, 0x0B	; 11
 572:	b0 e0       	ldi	r27, 0x00	; 0
 574:	ee eb       	ldi	r30, 0xBE	; 190
 576:	f2 e0       	ldi	r31, 0x02	; 2
 578:	0c 94 49 05 	jmp	0xa92	; 0xa92 <__prologue_saves__>
 57c:	6c 01       	movw	r12, r24
 57e:	7b 01       	movw	r14, r22
 580:	8a 01       	movw	r16, r20
 582:	fc 01       	movw	r30, r24
 584:	17 82       	std	Z+7, r1	; 0x07
 586:	16 82       	std	Z+6, r1	; 0x06
 588:	83 81       	ldd	r24, Z+3	; 0x03
 58a:	81 ff       	sbrs	r24, 1
 58c:	cc c1       	rjmp	.+920    	; 0x926 <__stack+0x27>
 58e:	ce 01       	movw	r24, r28
 590:	01 96       	adiw	r24, 0x01	; 1
 592:	3c 01       	movw	r6, r24
 594:	f6 01       	movw	r30, r12
 596:	93 81       	ldd	r25, Z+3	; 0x03
 598:	f7 01       	movw	r30, r14
 59a:	93 fd       	sbrc	r25, 3
 59c:	85 91       	lpm	r24, Z+
 59e:	93 ff       	sbrs	r25, 3
 5a0:	81 91       	ld	r24, Z+
 5a2:	7f 01       	movw	r14, r30
 5a4:	88 23       	and	r24, r24
 5a6:	09 f4       	brne	.+2      	; 0x5aa <vfprintf+0x3a>
 5a8:	ba c1       	rjmp	.+884    	; 0x91e <__stack+0x1f>
 5aa:	85 32       	cpi	r24, 0x25	; 37
 5ac:	39 f4       	brne	.+14     	; 0x5bc <vfprintf+0x4c>
 5ae:	93 fd       	sbrc	r25, 3
 5b0:	85 91       	lpm	r24, Z+
 5b2:	93 ff       	sbrs	r25, 3
 5b4:	81 91       	ld	r24, Z+
 5b6:	7f 01       	movw	r14, r30
 5b8:	85 32       	cpi	r24, 0x25	; 37
 5ba:	29 f4       	brne	.+10     	; 0x5c6 <vfprintf+0x56>
 5bc:	b6 01       	movw	r22, r12
 5be:	90 e0       	ldi	r25, 0x00	; 0
 5c0:	0e 94 af 04 	call	0x95e	; 0x95e <fputc>
 5c4:	e7 cf       	rjmp	.-50     	; 0x594 <vfprintf+0x24>
 5c6:	91 2c       	mov	r9, r1
 5c8:	21 2c       	mov	r2, r1
 5ca:	31 2c       	mov	r3, r1
 5cc:	ff e1       	ldi	r31, 0x1F	; 31
 5ce:	f3 15       	cp	r31, r3
 5d0:	d8 f0       	brcs	.+54     	; 0x608 <vfprintf+0x98>
 5d2:	8b 32       	cpi	r24, 0x2B	; 43
 5d4:	79 f0       	breq	.+30     	; 0x5f4 <vfprintf+0x84>
 5d6:	38 f4       	brcc	.+14     	; 0x5e6 <vfprintf+0x76>
 5d8:	80 32       	cpi	r24, 0x20	; 32
 5da:	79 f0       	breq	.+30     	; 0x5fa <vfprintf+0x8a>
 5dc:	83 32       	cpi	r24, 0x23	; 35
 5de:	a1 f4       	brne	.+40     	; 0x608 <vfprintf+0x98>
 5e0:	23 2d       	mov	r18, r3
 5e2:	20 61       	ori	r18, 0x10	; 16
 5e4:	1d c0       	rjmp	.+58     	; 0x620 <vfprintf+0xb0>
 5e6:	8d 32       	cpi	r24, 0x2D	; 45
 5e8:	61 f0       	breq	.+24     	; 0x602 <vfprintf+0x92>
 5ea:	80 33       	cpi	r24, 0x30	; 48
 5ec:	69 f4       	brne	.+26     	; 0x608 <vfprintf+0x98>
 5ee:	23 2d       	mov	r18, r3
 5f0:	21 60       	ori	r18, 0x01	; 1
 5f2:	16 c0       	rjmp	.+44     	; 0x620 <vfprintf+0xb0>
 5f4:	83 2d       	mov	r24, r3
 5f6:	82 60       	ori	r24, 0x02	; 2
 5f8:	38 2e       	mov	r3, r24
 5fa:	e3 2d       	mov	r30, r3
 5fc:	e4 60       	ori	r30, 0x04	; 4
 5fe:	3e 2e       	mov	r3, r30
 600:	2a c0       	rjmp	.+84     	; 0x656 <vfprintf+0xe6>
 602:	f3 2d       	mov	r31, r3
 604:	f8 60       	ori	r31, 0x08	; 8
 606:	1d c0       	rjmp	.+58     	; 0x642 <vfprintf+0xd2>
 608:	37 fc       	sbrc	r3, 7
 60a:	2d c0       	rjmp	.+90     	; 0x666 <vfprintf+0xf6>
 60c:	20 ed       	ldi	r18, 0xD0	; 208
 60e:	28 0f       	add	r18, r24
 610:	2a 30       	cpi	r18, 0x0A	; 10
 612:	40 f0       	brcs	.+16     	; 0x624 <vfprintf+0xb4>
 614:	8e 32       	cpi	r24, 0x2E	; 46
 616:	b9 f4       	brne	.+46     	; 0x646 <vfprintf+0xd6>
 618:	36 fc       	sbrc	r3, 6
 61a:	81 c1       	rjmp	.+770    	; 0x91e <__stack+0x1f>
 61c:	23 2d       	mov	r18, r3
 61e:	20 64       	ori	r18, 0x40	; 64
 620:	32 2e       	mov	r3, r18
 622:	19 c0       	rjmp	.+50     	; 0x656 <vfprintf+0xe6>
 624:	36 fe       	sbrs	r3, 6
 626:	06 c0       	rjmp	.+12     	; 0x634 <vfprintf+0xc4>
 628:	8a e0       	ldi	r24, 0x0A	; 10
 62a:	98 9e       	mul	r9, r24
 62c:	20 0d       	add	r18, r0
 62e:	11 24       	eor	r1, r1
 630:	92 2e       	mov	r9, r18
 632:	11 c0       	rjmp	.+34     	; 0x656 <vfprintf+0xe6>
 634:	ea e0       	ldi	r30, 0x0A	; 10
 636:	2e 9e       	mul	r2, r30
 638:	20 0d       	add	r18, r0
 63a:	11 24       	eor	r1, r1
 63c:	22 2e       	mov	r2, r18
 63e:	f3 2d       	mov	r31, r3
 640:	f0 62       	ori	r31, 0x20	; 32
 642:	3f 2e       	mov	r3, r31
 644:	08 c0       	rjmp	.+16     	; 0x656 <vfprintf+0xe6>
 646:	8c 36       	cpi	r24, 0x6C	; 108
 648:	21 f4       	brne	.+8      	; 0x652 <vfprintf+0xe2>
 64a:	83 2d       	mov	r24, r3
 64c:	80 68       	ori	r24, 0x80	; 128
 64e:	38 2e       	mov	r3, r24
 650:	02 c0       	rjmp	.+4      	; 0x656 <vfprintf+0xe6>
 652:	88 36       	cpi	r24, 0x68	; 104
 654:	41 f4       	brne	.+16     	; 0x666 <vfprintf+0xf6>
 656:	f7 01       	movw	r30, r14
 658:	93 fd       	sbrc	r25, 3
 65a:	85 91       	lpm	r24, Z+
 65c:	93 ff       	sbrs	r25, 3
 65e:	81 91       	ld	r24, Z+
 660:	7f 01       	movw	r14, r30
 662:	81 11       	cpse	r24, r1
 664:	b3 cf       	rjmp	.-154    	; 0x5cc <vfprintf+0x5c>
 666:	98 2f       	mov	r25, r24
 668:	9f 7d       	andi	r25, 0xDF	; 223
 66a:	95 54       	subi	r25, 0x45	; 69
 66c:	93 30       	cpi	r25, 0x03	; 3
 66e:	28 f4       	brcc	.+10     	; 0x67a <vfprintf+0x10a>
 670:	0c 5f       	subi	r16, 0xFC	; 252
 672:	1f 4f       	sbci	r17, 0xFF	; 255
 674:	9f e3       	ldi	r25, 0x3F	; 63
 676:	99 83       	std	Y+1, r25	; 0x01
 678:	0d c0       	rjmp	.+26     	; 0x694 <vfprintf+0x124>
 67a:	83 36       	cpi	r24, 0x63	; 99
 67c:	31 f0       	breq	.+12     	; 0x68a <vfprintf+0x11a>
 67e:	83 37       	cpi	r24, 0x73	; 115
 680:	71 f0       	breq	.+28     	; 0x69e <vfprintf+0x12e>
 682:	83 35       	cpi	r24, 0x53	; 83
 684:	09 f0       	breq	.+2      	; 0x688 <vfprintf+0x118>
 686:	59 c0       	rjmp	.+178    	; 0x73a <vfprintf+0x1ca>
 688:	21 c0       	rjmp	.+66     	; 0x6cc <vfprintf+0x15c>
 68a:	f8 01       	movw	r30, r16
 68c:	80 81       	ld	r24, Z
 68e:	89 83       	std	Y+1, r24	; 0x01
 690:	0e 5f       	subi	r16, 0xFE	; 254
 692:	1f 4f       	sbci	r17, 0xFF	; 255
 694:	88 24       	eor	r8, r8
 696:	83 94       	inc	r8
 698:	91 2c       	mov	r9, r1
 69a:	53 01       	movw	r10, r6
 69c:	13 c0       	rjmp	.+38     	; 0x6c4 <vfprintf+0x154>
 69e:	28 01       	movw	r4, r16
 6a0:	f2 e0       	ldi	r31, 0x02	; 2
 6a2:	4f 0e       	add	r4, r31
 6a4:	51 1c       	adc	r5, r1
 6a6:	f8 01       	movw	r30, r16
 6a8:	a0 80       	ld	r10, Z
 6aa:	b1 80       	ldd	r11, Z+1	; 0x01
 6ac:	36 fe       	sbrs	r3, 6
 6ae:	03 c0       	rjmp	.+6      	; 0x6b6 <vfprintf+0x146>
 6b0:	69 2d       	mov	r22, r9
 6b2:	70 e0       	ldi	r23, 0x00	; 0
 6b4:	02 c0       	rjmp	.+4      	; 0x6ba <vfprintf+0x14a>
 6b6:	6f ef       	ldi	r22, 0xFF	; 255
 6b8:	7f ef       	ldi	r23, 0xFF	; 255
 6ba:	c5 01       	movw	r24, r10
 6bc:	0e 94 a4 04 	call	0x948	; 0x948 <strnlen>
 6c0:	4c 01       	movw	r8, r24
 6c2:	82 01       	movw	r16, r4
 6c4:	f3 2d       	mov	r31, r3
 6c6:	ff 77       	andi	r31, 0x7F	; 127
 6c8:	3f 2e       	mov	r3, r31
 6ca:	16 c0       	rjmp	.+44     	; 0x6f8 <vfprintf+0x188>
 6cc:	28 01       	movw	r4, r16
 6ce:	22 e0       	ldi	r18, 0x02	; 2
 6d0:	42 0e       	add	r4, r18
 6d2:	51 1c       	adc	r5, r1
 6d4:	f8 01       	movw	r30, r16
 6d6:	a0 80       	ld	r10, Z
 6d8:	b1 80       	ldd	r11, Z+1	; 0x01
 6da:	36 fe       	sbrs	r3, 6
 6dc:	03 c0       	rjmp	.+6      	; 0x6e4 <vfprintf+0x174>
 6de:	69 2d       	mov	r22, r9
 6e0:	70 e0       	ldi	r23, 0x00	; 0
 6e2:	02 c0       	rjmp	.+4      	; 0x6e8 <vfprintf+0x178>
 6e4:	6f ef       	ldi	r22, 0xFF	; 255
 6e6:	7f ef       	ldi	r23, 0xFF	; 255
 6e8:	c5 01       	movw	r24, r10
 6ea:	0e 94 99 04 	call	0x932	; 0x932 <strnlen_P>
 6ee:	4c 01       	movw	r8, r24
 6f0:	f3 2d       	mov	r31, r3
 6f2:	f0 68       	ori	r31, 0x80	; 128
 6f4:	3f 2e       	mov	r3, r31
 6f6:	82 01       	movw	r16, r4
 6f8:	33 fc       	sbrc	r3, 3
 6fa:	1b c0       	rjmp	.+54     	; 0x732 <vfprintf+0x1c2>
 6fc:	82 2d       	mov	r24, r2
 6fe:	90 e0       	ldi	r25, 0x00	; 0
 700:	88 16       	cp	r8, r24
 702:	99 06       	cpc	r9, r25
 704:	b0 f4       	brcc	.+44     	; 0x732 <vfprintf+0x1c2>
 706:	b6 01       	movw	r22, r12
 708:	80 e2       	ldi	r24, 0x20	; 32
 70a:	90 e0       	ldi	r25, 0x00	; 0
 70c:	0e 94 af 04 	call	0x95e	; 0x95e <fputc>
 710:	2a 94       	dec	r2
 712:	f4 cf       	rjmp	.-24     	; 0x6fc <vfprintf+0x18c>
 714:	f5 01       	movw	r30, r10
 716:	37 fc       	sbrc	r3, 7
 718:	85 91       	lpm	r24, Z+
 71a:	37 fe       	sbrs	r3, 7
 71c:	81 91       	ld	r24, Z+
 71e:	5f 01       	movw	r10, r30
 720:	b6 01       	movw	r22, r12
 722:	90 e0       	ldi	r25, 0x00	; 0
 724:	0e 94 af 04 	call	0x95e	; 0x95e <fputc>
 728:	21 10       	cpse	r2, r1
 72a:	2a 94       	dec	r2
 72c:	21 e0       	ldi	r18, 0x01	; 1
 72e:	82 1a       	sub	r8, r18
 730:	91 08       	sbc	r9, r1
 732:	81 14       	cp	r8, r1
 734:	91 04       	cpc	r9, r1
 736:	71 f7       	brne	.-36     	; 0x714 <vfprintf+0x1a4>
 738:	e8 c0       	rjmp	.+464    	; 0x90a <__stack+0xb>
 73a:	84 36       	cpi	r24, 0x64	; 100
 73c:	11 f0       	breq	.+4      	; 0x742 <vfprintf+0x1d2>
 73e:	89 36       	cpi	r24, 0x69	; 105
 740:	41 f5       	brne	.+80     	; 0x792 <vfprintf+0x222>
 742:	f8 01       	movw	r30, r16
 744:	37 fe       	sbrs	r3, 7
 746:	07 c0       	rjmp	.+14     	; 0x756 <vfprintf+0x1e6>
 748:	60 81       	ld	r22, Z
 74a:	71 81       	ldd	r23, Z+1	; 0x01
 74c:	82 81       	ldd	r24, Z+2	; 0x02
 74e:	93 81       	ldd	r25, Z+3	; 0x03
 750:	0c 5f       	subi	r16, 0xFC	; 252
 752:	1f 4f       	sbci	r17, 0xFF	; 255
 754:	08 c0       	rjmp	.+16     	; 0x766 <vfprintf+0x1f6>
 756:	60 81       	ld	r22, Z
 758:	71 81       	ldd	r23, Z+1	; 0x01
 75a:	07 2e       	mov	r0, r23
 75c:	00 0c       	add	r0, r0
 75e:	88 0b       	sbc	r24, r24
 760:	99 0b       	sbc	r25, r25
 762:	0e 5f       	subi	r16, 0xFE	; 254
 764:	1f 4f       	sbci	r17, 0xFF	; 255
 766:	f3 2d       	mov	r31, r3
 768:	ff 76       	andi	r31, 0x6F	; 111
 76a:	3f 2e       	mov	r3, r31
 76c:	97 ff       	sbrs	r25, 7
 76e:	09 c0       	rjmp	.+18     	; 0x782 <vfprintf+0x212>
 770:	90 95       	com	r25
 772:	80 95       	com	r24
 774:	70 95       	com	r23
 776:	61 95       	neg	r22
 778:	7f 4f       	sbci	r23, 0xFF	; 255
 77a:	8f 4f       	sbci	r24, 0xFF	; 255
 77c:	9f 4f       	sbci	r25, 0xFF	; 255
 77e:	f0 68       	ori	r31, 0x80	; 128
 780:	3f 2e       	mov	r3, r31
 782:	2a e0       	ldi	r18, 0x0A	; 10
 784:	30 e0       	ldi	r19, 0x00	; 0
 786:	a3 01       	movw	r20, r6
 788:	0e 94 eb 04 	call	0x9d6	; 0x9d6 <__ultoa_invert>
 78c:	88 2e       	mov	r8, r24
 78e:	86 18       	sub	r8, r6
 790:	45 c0       	rjmp	.+138    	; 0x81c <vfprintf+0x2ac>
 792:	85 37       	cpi	r24, 0x75	; 117
 794:	31 f4       	brne	.+12     	; 0x7a2 <vfprintf+0x232>
 796:	23 2d       	mov	r18, r3
 798:	2f 7e       	andi	r18, 0xEF	; 239
 79a:	b2 2e       	mov	r11, r18
 79c:	2a e0       	ldi	r18, 0x0A	; 10
 79e:	30 e0       	ldi	r19, 0x00	; 0
 7a0:	25 c0       	rjmp	.+74     	; 0x7ec <vfprintf+0x27c>
 7a2:	93 2d       	mov	r25, r3
 7a4:	99 7f       	andi	r25, 0xF9	; 249
 7a6:	b9 2e       	mov	r11, r25
 7a8:	8f 36       	cpi	r24, 0x6F	; 111
 7aa:	c1 f0       	breq	.+48     	; 0x7dc <vfprintf+0x26c>
 7ac:	18 f4       	brcc	.+6      	; 0x7b4 <vfprintf+0x244>
 7ae:	88 35       	cpi	r24, 0x58	; 88
 7b0:	79 f0       	breq	.+30     	; 0x7d0 <vfprintf+0x260>
 7b2:	b5 c0       	rjmp	.+362    	; 0x91e <__stack+0x1f>
 7b4:	80 37       	cpi	r24, 0x70	; 112
 7b6:	19 f0       	breq	.+6      	; 0x7be <vfprintf+0x24e>
 7b8:	88 37       	cpi	r24, 0x78	; 120
 7ba:	21 f0       	breq	.+8      	; 0x7c4 <vfprintf+0x254>
 7bc:	b0 c0       	rjmp	.+352    	; 0x91e <__stack+0x1f>
 7be:	e9 2f       	mov	r30, r25
 7c0:	e0 61       	ori	r30, 0x10	; 16
 7c2:	be 2e       	mov	r11, r30
 7c4:	b4 fe       	sbrs	r11, 4
 7c6:	0d c0       	rjmp	.+26     	; 0x7e2 <vfprintf+0x272>
 7c8:	fb 2d       	mov	r31, r11
 7ca:	f4 60       	ori	r31, 0x04	; 4
 7cc:	bf 2e       	mov	r11, r31
 7ce:	09 c0       	rjmp	.+18     	; 0x7e2 <vfprintf+0x272>
 7d0:	34 fe       	sbrs	r3, 4
 7d2:	0a c0       	rjmp	.+20     	; 0x7e8 <vfprintf+0x278>
 7d4:	29 2f       	mov	r18, r25
 7d6:	26 60       	ori	r18, 0x06	; 6
 7d8:	b2 2e       	mov	r11, r18
 7da:	06 c0       	rjmp	.+12     	; 0x7e8 <vfprintf+0x278>
 7dc:	28 e0       	ldi	r18, 0x08	; 8
 7de:	30 e0       	ldi	r19, 0x00	; 0
 7e0:	05 c0       	rjmp	.+10     	; 0x7ec <vfprintf+0x27c>
 7e2:	20 e1       	ldi	r18, 0x10	; 16
 7e4:	30 e0       	ldi	r19, 0x00	; 0
 7e6:	02 c0       	rjmp	.+4      	; 0x7ec <vfprintf+0x27c>
 7e8:	20 e1       	ldi	r18, 0x10	; 16
 7ea:	32 e0       	ldi	r19, 0x02	; 2
 7ec:	f8 01       	movw	r30, r16
 7ee:	b7 fe       	sbrs	r11, 7
 7f0:	07 c0       	rjmp	.+14     	; 0x800 <vfprintf+0x290>
 7f2:	60 81       	ld	r22, Z
 7f4:	71 81       	ldd	r23, Z+1	; 0x01
 7f6:	82 81       	ldd	r24, Z+2	; 0x02
 7f8:	93 81       	ldd	r25, Z+3	; 0x03
 7fa:	0c 5f       	subi	r16, 0xFC	; 252
 7fc:	1f 4f       	sbci	r17, 0xFF	; 255
 7fe:	06 c0       	rjmp	.+12     	; 0x80c <vfprintf+0x29c>
 800:	60 81       	ld	r22, Z
 802:	71 81       	ldd	r23, Z+1	; 0x01
 804:	80 e0       	ldi	r24, 0x00	; 0
 806:	90 e0       	ldi	r25, 0x00	; 0
 808:	0e 5f       	subi	r16, 0xFE	; 254
 80a:	1f 4f       	sbci	r17, 0xFF	; 255
 80c:	a3 01       	movw	r20, r6
 80e:	0e 94 eb 04 	call	0x9d6	; 0x9d6 <__ultoa_invert>
 812:	88 2e       	mov	r8, r24
 814:	86 18       	sub	r8, r6
 816:	fb 2d       	mov	r31, r11
 818:	ff 77       	andi	r31, 0x7F	; 127
 81a:	3f 2e       	mov	r3, r31
 81c:	36 fe       	sbrs	r3, 6
 81e:	0d c0       	rjmp	.+26     	; 0x83a <vfprintf+0x2ca>
 820:	23 2d       	mov	r18, r3
 822:	2e 7f       	andi	r18, 0xFE	; 254
 824:	a2 2e       	mov	r10, r18
 826:	89 14       	cp	r8, r9
 828:	58 f4       	brcc	.+22     	; 0x840 <vfprintf+0x2d0>
 82a:	34 fe       	sbrs	r3, 4
 82c:	0b c0       	rjmp	.+22     	; 0x844 <vfprintf+0x2d4>
 82e:	32 fc       	sbrc	r3, 2
 830:	09 c0       	rjmp	.+18     	; 0x844 <vfprintf+0x2d4>
 832:	83 2d       	mov	r24, r3
 834:	8e 7e       	andi	r24, 0xEE	; 238
 836:	a8 2e       	mov	r10, r24
 838:	05 c0       	rjmp	.+10     	; 0x844 <vfprintf+0x2d4>
 83a:	b8 2c       	mov	r11, r8
 83c:	a3 2c       	mov	r10, r3
 83e:	03 c0       	rjmp	.+6      	; 0x846 <vfprintf+0x2d6>
 840:	b8 2c       	mov	r11, r8
 842:	01 c0       	rjmp	.+2      	; 0x846 <vfprintf+0x2d6>
 844:	b9 2c       	mov	r11, r9
 846:	a4 fe       	sbrs	r10, 4
 848:	0f c0       	rjmp	.+30     	; 0x868 <vfprintf+0x2f8>
 84a:	fe 01       	movw	r30, r28
 84c:	e8 0d       	add	r30, r8
 84e:	f1 1d       	adc	r31, r1
 850:	80 81       	ld	r24, Z
 852:	80 33       	cpi	r24, 0x30	; 48
 854:	21 f4       	brne	.+8      	; 0x85e <vfprintf+0x2ee>
 856:	9a 2d       	mov	r25, r10
 858:	99 7e       	andi	r25, 0xE9	; 233
 85a:	a9 2e       	mov	r10, r25
 85c:	09 c0       	rjmp	.+18     	; 0x870 <vfprintf+0x300>
 85e:	a2 fe       	sbrs	r10, 2
 860:	06 c0       	rjmp	.+12     	; 0x86e <vfprintf+0x2fe>
 862:	b3 94       	inc	r11
 864:	b3 94       	inc	r11
 866:	04 c0       	rjmp	.+8      	; 0x870 <vfprintf+0x300>
 868:	8a 2d       	mov	r24, r10
 86a:	86 78       	andi	r24, 0x86	; 134
 86c:	09 f0       	breq	.+2      	; 0x870 <vfprintf+0x300>
 86e:	b3 94       	inc	r11
 870:	a3 fc       	sbrc	r10, 3
 872:	11 c0       	rjmp	.+34     	; 0x896 <vfprintf+0x326>
 874:	a0 fe       	sbrs	r10, 0
 876:	06 c0       	rjmp	.+12     	; 0x884 <vfprintf+0x314>
 878:	b2 14       	cp	r11, r2
 87a:	88 f4       	brcc	.+34     	; 0x89e <vfprintf+0x32e>
 87c:	28 0c       	add	r2, r8
 87e:	92 2c       	mov	r9, r2
 880:	9b 18       	sub	r9, r11
 882:	0e c0       	rjmp	.+28     	; 0x8a0 <vfprintf+0x330>
 884:	b2 14       	cp	r11, r2
 886:	60 f4       	brcc	.+24     	; 0x8a0 <vfprintf+0x330>
 888:	b6 01       	movw	r22, r12
 88a:	80 e2       	ldi	r24, 0x20	; 32
 88c:	90 e0       	ldi	r25, 0x00	; 0
 88e:	0e 94 af 04 	call	0x95e	; 0x95e <fputc>
 892:	b3 94       	inc	r11
 894:	f7 cf       	rjmp	.-18     	; 0x884 <vfprintf+0x314>
 896:	b2 14       	cp	r11, r2
 898:	18 f4       	brcc	.+6      	; 0x8a0 <vfprintf+0x330>
 89a:	2b 18       	sub	r2, r11
 89c:	02 c0       	rjmp	.+4      	; 0x8a2 <vfprintf+0x332>
 89e:	98 2c       	mov	r9, r8
 8a0:	21 2c       	mov	r2, r1
 8a2:	a4 fe       	sbrs	r10, 4
 8a4:	10 c0       	rjmp	.+32     	; 0x8c6 <vfprintf+0x356>
 8a6:	b6 01       	movw	r22, r12
 8a8:	80 e3       	ldi	r24, 0x30	; 48
 8aa:	90 e0       	ldi	r25, 0x00	; 0
 8ac:	0e 94 af 04 	call	0x95e	; 0x95e <fputc>
 8b0:	a2 fe       	sbrs	r10, 2
 8b2:	17 c0       	rjmp	.+46     	; 0x8e2 <vfprintf+0x372>
 8b4:	a1 fc       	sbrc	r10, 1
 8b6:	03 c0       	rjmp	.+6      	; 0x8be <vfprintf+0x34e>
 8b8:	88 e7       	ldi	r24, 0x78	; 120
 8ba:	90 e0       	ldi	r25, 0x00	; 0
 8bc:	02 c0       	rjmp	.+4      	; 0x8c2 <vfprintf+0x352>
 8be:	88 e5       	ldi	r24, 0x58	; 88
 8c0:	90 e0       	ldi	r25, 0x00	; 0
 8c2:	b6 01       	movw	r22, r12
 8c4:	0c c0       	rjmp	.+24     	; 0x8de <vfprintf+0x36e>
 8c6:	8a 2d       	mov	r24, r10
 8c8:	86 78       	andi	r24, 0x86	; 134
 8ca:	59 f0       	breq	.+22     	; 0x8e2 <vfprintf+0x372>
 8cc:	a1 fe       	sbrs	r10, 1
 8ce:	02 c0       	rjmp	.+4      	; 0x8d4 <vfprintf+0x364>
 8d0:	8b e2       	ldi	r24, 0x2B	; 43
 8d2:	01 c0       	rjmp	.+2      	; 0x8d6 <vfprintf+0x366>
 8d4:	80 e2       	ldi	r24, 0x20	; 32
 8d6:	a7 fc       	sbrc	r10, 7
 8d8:	8d e2       	ldi	r24, 0x2D	; 45
 8da:	b6 01       	movw	r22, r12
 8dc:	90 e0       	ldi	r25, 0x00	; 0
 8de:	0e 94 af 04 	call	0x95e	; 0x95e <fputc>
 8e2:	89 14       	cp	r8, r9
 8e4:	38 f4       	brcc	.+14     	; 0x8f4 <vfprintf+0x384>
 8e6:	b6 01       	movw	r22, r12
 8e8:	80 e3       	ldi	r24, 0x30	; 48
 8ea:	90 e0       	ldi	r25, 0x00	; 0
 8ec:	0e 94 af 04 	call	0x95e	; 0x95e <fputc>
 8f0:	9a 94       	dec	r9
 8f2:	f7 cf       	rjmp	.-18     	; 0x8e2 <vfprintf+0x372>
 8f4:	8a 94       	dec	r8
 8f6:	f3 01       	movw	r30, r6
 8f8:	e8 0d       	add	r30, r8
 8fa:	f1 1d       	adc	r31, r1
 8fc:	80 81       	ld	r24, Z
 8fe:	b6 01       	movw	r22, r12
 900:	90 e0       	ldi	r25, 0x00	; 0
 902:	0e 94 af 04 	call	0x95e	; 0x95e <fputc>
 906:	81 10       	cpse	r8, r1
 908:	f5 cf       	rjmp	.-22     	; 0x8f4 <vfprintf+0x384>
 90a:	22 20       	and	r2, r2
 90c:	09 f4       	brne	.+2      	; 0x910 <__stack+0x11>
 90e:	42 ce       	rjmp	.-892    	; 0x594 <vfprintf+0x24>
 910:	b6 01       	movw	r22, r12
 912:	80 e2       	ldi	r24, 0x20	; 32
 914:	90 e0       	ldi	r25, 0x00	; 0
 916:	0e 94 af 04 	call	0x95e	; 0x95e <fputc>
 91a:	2a 94       	dec	r2
 91c:	f6 cf       	rjmp	.-20     	; 0x90a <__stack+0xb>
 91e:	f6 01       	movw	r30, r12
 920:	86 81       	ldd	r24, Z+6	; 0x06
 922:	97 81       	ldd	r25, Z+7	; 0x07
 924:	02 c0       	rjmp	.+4      	; 0x92a <__stack+0x2b>
 926:	8f ef       	ldi	r24, 0xFF	; 255
 928:	9f ef       	ldi	r25, 0xFF	; 255
 92a:	2b 96       	adiw	r28, 0x0b	; 11
 92c:	e2 e1       	ldi	r30, 0x12	; 18
 92e:	0c 94 65 05 	jmp	0xaca	; 0xaca <__epilogue_restores__>

00000932 <strnlen_P>:
 932:	fc 01       	movw	r30, r24
 934:	05 90       	lpm	r0, Z+
 936:	61 50       	subi	r22, 0x01	; 1
 938:	70 40       	sbci	r23, 0x00	; 0
 93a:	01 10       	cpse	r0, r1
 93c:	d8 f7       	brcc	.-10     	; 0x934 <strnlen_P+0x2>
 93e:	80 95       	com	r24
 940:	90 95       	com	r25
 942:	8e 0f       	add	r24, r30
 944:	9f 1f       	adc	r25, r31
 946:	08 95       	ret

00000948 <strnlen>:
 948:	fc 01       	movw	r30, r24
 94a:	61 50       	subi	r22, 0x01	; 1
 94c:	70 40       	sbci	r23, 0x00	; 0
 94e:	01 90       	ld	r0, Z+
 950:	01 10       	cpse	r0, r1
 952:	d8 f7       	brcc	.-10     	; 0x94a <strnlen+0x2>
 954:	80 95       	com	r24
 956:	90 95       	com	r25
 958:	8e 0f       	add	r24, r30
 95a:	9f 1f       	adc	r25, r31
 95c:	08 95       	ret

0000095e <fputc>:
 95e:	0f 93       	push	r16
 960:	1f 93       	push	r17
 962:	cf 93       	push	r28
 964:	df 93       	push	r29
 966:	fb 01       	movw	r30, r22
 968:	23 81       	ldd	r18, Z+3	; 0x03
 96a:	21 fd       	sbrc	r18, 1
 96c:	03 c0       	rjmp	.+6      	; 0x974 <fputc+0x16>
 96e:	8f ef       	ldi	r24, 0xFF	; 255
 970:	9f ef       	ldi	r25, 0xFF	; 255
 972:	2c c0       	rjmp	.+88     	; 0x9cc <fputc+0x6e>
 974:	22 ff       	sbrs	r18, 2
 976:	16 c0       	rjmp	.+44     	; 0x9a4 <fputc+0x46>
 978:	46 81       	ldd	r20, Z+6	; 0x06
 97a:	57 81       	ldd	r21, Z+7	; 0x07
 97c:	24 81       	ldd	r18, Z+4	; 0x04
 97e:	35 81       	ldd	r19, Z+5	; 0x05
 980:	42 17       	cp	r20, r18
 982:	53 07       	cpc	r21, r19
 984:	44 f4       	brge	.+16     	; 0x996 <fputc+0x38>
 986:	a0 81       	ld	r26, Z
 988:	b1 81       	ldd	r27, Z+1	; 0x01
 98a:	9d 01       	movw	r18, r26
 98c:	2f 5f       	subi	r18, 0xFF	; 255
 98e:	3f 4f       	sbci	r19, 0xFF	; 255
 990:	31 83       	std	Z+1, r19	; 0x01
 992:	20 83       	st	Z, r18
 994:	8c 93       	st	X, r24
 996:	26 81       	ldd	r18, Z+6	; 0x06
 998:	37 81       	ldd	r19, Z+7	; 0x07
 99a:	2f 5f       	subi	r18, 0xFF	; 255
 99c:	3f 4f       	sbci	r19, 0xFF	; 255
 99e:	37 83       	std	Z+7, r19	; 0x07
 9a0:	26 83       	std	Z+6, r18	; 0x06
 9a2:	14 c0       	rjmp	.+40     	; 0x9cc <fputc+0x6e>
 9a4:	8b 01       	movw	r16, r22
 9a6:	ec 01       	movw	r28, r24
 9a8:	fb 01       	movw	r30, r22
 9aa:	00 84       	ldd	r0, Z+8	; 0x08
 9ac:	f1 85       	ldd	r31, Z+9	; 0x09
 9ae:	e0 2d       	mov	r30, r0
 9b0:	09 95       	icall
 9b2:	89 2b       	or	r24, r25
 9b4:	e1 f6       	brne	.-72     	; 0x96e <fputc+0x10>
 9b6:	d8 01       	movw	r26, r16
 9b8:	16 96       	adiw	r26, 0x06	; 6
 9ba:	8d 91       	ld	r24, X+
 9bc:	9c 91       	ld	r25, X
 9be:	17 97       	sbiw	r26, 0x07	; 7
 9c0:	01 96       	adiw	r24, 0x01	; 1
 9c2:	17 96       	adiw	r26, 0x07	; 7
 9c4:	9c 93       	st	X, r25
 9c6:	8e 93       	st	-X, r24
 9c8:	16 97       	sbiw	r26, 0x06	; 6
 9ca:	ce 01       	movw	r24, r28
 9cc:	df 91       	pop	r29
 9ce:	cf 91       	pop	r28
 9d0:	1f 91       	pop	r17
 9d2:	0f 91       	pop	r16
 9d4:	08 95       	ret

000009d6 <__ultoa_invert>:
 9d6:	fa 01       	movw	r30, r20
 9d8:	aa 27       	eor	r26, r26
 9da:	28 30       	cpi	r18, 0x08	; 8
 9dc:	51 f1       	breq	.+84     	; 0xa32 <__ultoa_invert+0x5c>
 9de:	20 31       	cpi	r18, 0x10	; 16
 9e0:	81 f1       	breq	.+96     	; 0xa42 <__ultoa_invert+0x6c>
 9e2:	e8 94       	clt
 9e4:	6f 93       	push	r22
 9e6:	6e 7f       	andi	r22, 0xFE	; 254
 9e8:	6e 5f       	subi	r22, 0xFE	; 254
 9ea:	7f 4f       	sbci	r23, 0xFF	; 255
 9ec:	8f 4f       	sbci	r24, 0xFF	; 255
 9ee:	9f 4f       	sbci	r25, 0xFF	; 255
 9f0:	af 4f       	sbci	r26, 0xFF	; 255
 9f2:	b1 e0       	ldi	r27, 0x01	; 1
 9f4:	3e d0       	rcall	.+124    	; 0xa72 <__ultoa_invert+0x9c>
 9f6:	b4 e0       	ldi	r27, 0x04	; 4
 9f8:	3c d0       	rcall	.+120    	; 0xa72 <__ultoa_invert+0x9c>
 9fa:	67 0f       	add	r22, r23
 9fc:	78 1f       	adc	r23, r24
 9fe:	89 1f       	adc	r24, r25
 a00:	9a 1f       	adc	r25, r26
 a02:	a1 1d       	adc	r26, r1
 a04:	68 0f       	add	r22, r24
 a06:	79 1f       	adc	r23, r25
 a08:	8a 1f       	adc	r24, r26
 a0a:	91 1d       	adc	r25, r1
 a0c:	a1 1d       	adc	r26, r1
 a0e:	6a 0f       	add	r22, r26
 a10:	71 1d       	adc	r23, r1
 a12:	81 1d       	adc	r24, r1
 a14:	91 1d       	adc	r25, r1
 a16:	a1 1d       	adc	r26, r1
 a18:	20 d0       	rcall	.+64     	; 0xa5a <__ultoa_invert+0x84>
 a1a:	09 f4       	brne	.+2      	; 0xa1e <__ultoa_invert+0x48>
 a1c:	68 94       	set
 a1e:	3f 91       	pop	r19
 a20:	2a e0       	ldi	r18, 0x0A	; 10
 a22:	26 9f       	mul	r18, r22
 a24:	11 24       	eor	r1, r1
 a26:	30 19       	sub	r19, r0
 a28:	30 5d       	subi	r19, 0xD0	; 208
 a2a:	31 93       	st	Z+, r19
 a2c:	de f6       	brtc	.-74     	; 0x9e4 <__ultoa_invert+0xe>
 a2e:	cf 01       	movw	r24, r30
 a30:	08 95       	ret
 a32:	46 2f       	mov	r20, r22
 a34:	47 70       	andi	r20, 0x07	; 7
 a36:	40 5d       	subi	r20, 0xD0	; 208
 a38:	41 93       	st	Z+, r20
 a3a:	b3 e0       	ldi	r27, 0x03	; 3
 a3c:	0f d0       	rcall	.+30     	; 0xa5c <__ultoa_invert+0x86>
 a3e:	c9 f7       	brne	.-14     	; 0xa32 <__ultoa_invert+0x5c>
 a40:	f6 cf       	rjmp	.-20     	; 0xa2e <__ultoa_invert+0x58>
 a42:	46 2f       	mov	r20, r22
 a44:	4f 70       	andi	r20, 0x0F	; 15
 a46:	40 5d       	subi	r20, 0xD0	; 208
 a48:	4a 33       	cpi	r20, 0x3A	; 58
 a4a:	18 f0       	brcs	.+6      	; 0xa52 <__ultoa_invert+0x7c>
 a4c:	49 5d       	subi	r20, 0xD9	; 217
 a4e:	31 fd       	sbrc	r19, 1
 a50:	40 52       	subi	r20, 0x20	; 32
 a52:	41 93       	st	Z+, r20
 a54:	02 d0       	rcall	.+4      	; 0xa5a <__ultoa_invert+0x84>
 a56:	a9 f7       	brne	.-22     	; 0xa42 <__ultoa_invert+0x6c>
 a58:	ea cf       	rjmp	.-44     	; 0xa2e <__ultoa_invert+0x58>
 a5a:	b4 e0       	ldi	r27, 0x04	; 4
 a5c:	a6 95       	lsr	r26
 a5e:	97 95       	ror	r25
 a60:	87 95       	ror	r24
 a62:	77 95       	ror	r23
 a64:	67 95       	ror	r22
 a66:	ba 95       	dec	r27
 a68:	c9 f7       	brne	.-14     	; 0xa5c <__ultoa_invert+0x86>
 a6a:	00 97       	sbiw	r24, 0x00	; 0
 a6c:	61 05       	cpc	r22, r1
 a6e:	71 05       	cpc	r23, r1
 a70:	08 95       	ret
 a72:	9b 01       	movw	r18, r22
 a74:	ac 01       	movw	r20, r24
 a76:	0a 2e       	mov	r0, r26
 a78:	06 94       	lsr	r0
 a7a:	57 95       	ror	r21
 a7c:	47 95       	ror	r20
 a7e:	37 95       	ror	r19
 a80:	27 95       	ror	r18
 a82:	ba 95       	dec	r27
 a84:	c9 f7       	brne	.-14     	; 0xa78 <__ultoa_invert+0xa2>
 a86:	62 0f       	add	r22, r18
 a88:	73 1f       	adc	r23, r19
 a8a:	84 1f       	adc	r24, r20
 a8c:	95 1f       	adc	r25, r21
 a8e:	a0 1d       	adc	r26, r0
 a90:	08 95       	ret

00000a92 <__prologue_saves__>:
 a92:	2f 92       	push	r2
 a94:	3f 92       	push	r3
 a96:	4f 92       	push	r4
 a98:	5f 92       	push	r5
 a9a:	6f 92       	push	r6
 a9c:	7f 92       	push	r7
 a9e:	8f 92       	push	r8
 aa0:	9f 92       	push	r9
 aa2:	af 92       	push	r10
 aa4:	bf 92       	push	r11
 aa6:	cf 92       	push	r12
 aa8:	df 92       	push	r13
 aaa:	ef 92       	push	r14
 aac:	ff 92       	push	r15
 aae:	0f 93       	push	r16
 ab0:	1f 93       	push	r17
 ab2:	cf 93       	push	r28
 ab4:	df 93       	push	r29
 ab6:	cd b7       	in	r28, 0x3d	; 61
 ab8:	de b7       	in	r29, 0x3e	; 62
 aba:	ca 1b       	sub	r28, r26
 abc:	db 0b       	sbc	r29, r27
 abe:	0f b6       	in	r0, 0x3f	; 63
 ac0:	f8 94       	cli
 ac2:	de bf       	out	0x3e, r29	; 62
 ac4:	0f be       	out	0x3f, r0	; 63
 ac6:	cd bf       	out	0x3d, r28	; 61
 ac8:	09 94       	ijmp

00000aca <__epilogue_restores__>:
 aca:	2a 88       	ldd	r2, Y+18	; 0x12
 acc:	39 88       	ldd	r3, Y+17	; 0x11
 ace:	48 88       	ldd	r4, Y+16	; 0x10
 ad0:	5f 84       	ldd	r5, Y+15	; 0x0f
 ad2:	6e 84       	ldd	r6, Y+14	; 0x0e
 ad4:	7d 84       	ldd	r7, Y+13	; 0x0d
 ad6:	8c 84       	ldd	r8, Y+12	; 0x0c
 ad8:	9b 84       	ldd	r9, Y+11	; 0x0b
 ada:	aa 84       	ldd	r10, Y+10	; 0x0a
 adc:	b9 84       	ldd	r11, Y+9	; 0x09
 ade:	c8 84       	ldd	r12, Y+8	; 0x08
 ae0:	df 80       	ldd	r13, Y+7	; 0x07
 ae2:	ee 80       	ldd	r14, Y+6	; 0x06
 ae4:	fd 80       	ldd	r15, Y+5	; 0x05
 ae6:	0c 81       	ldd	r16, Y+4	; 0x04
 ae8:	1b 81       	ldd	r17, Y+3	; 0x03
 aea:	aa 81       	ldd	r26, Y+2	; 0x02
 aec:	b9 81       	ldd	r27, Y+1	; 0x01
 aee:	ce 0f       	add	r28, r30
 af0:	d1 1d       	adc	r29, r1
 af2:	0f b6       	in	r0, 0x3f	; 63
 af4:	f8 94       	cli
 af6:	de bf       	out	0x3e, r29	; 62
 af8:	0f be       	out	0x3f, r0	; 63
 afa:	cd bf       	out	0x3d, r28	; 61
 afc:	ed 01       	movw	r28, r26
 afe:	08 95       	ret

00000b00 <_exit>:
 b00:	f8 94       	cli

00000b02 <__stop_program>:
 b02:	ff cf       	rjmp	.-2      	; 0xb02 <__stop_program>
