
PongGame.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000043c  00800100  0000094c  000009e0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000094c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  0080053c  0080053c  00000e1c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000e1c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000e78  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000f0  00000000  00000000  00000eb8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000018d3  00000000  00000000  00000fa8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a22  00000000  00000000  0000287b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000a08  00000000  00000000  0000329d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000390  00000000  00000000  00003ca8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000569  00000000  00000000  00004038  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000128f  00000000  00000000  000045a1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000d0  00000000  00000000  00005830  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	15 e0       	ldi	r17, 0x05	; 5
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ec e4       	ldi	r30, 0x4C	; 76
  7c:	f9 e0       	ldi	r31, 0x09	; 9
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	ac 33       	cpi	r26, 0x3C	; 60
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	25 e0       	ldi	r18, 0x05	; 5
  8c:	ac e3       	ldi	r26, 0x3C	; 60
  8e:	b5 e0       	ldi	r27, 0x05	; 5
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a6 34       	cpi	r26, 0x46	; 70
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 80 01 	call	0x300	; 0x300 <main>
  9e:	0c 94 a4 04 	jmp	0x948	; 0x948 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <lcd_command>:
			lcd_command(CMD_SET_COLUMN_LOWER | (c & 0xf));
			lcd_command(CMD_SET_COLUMN_UPPER | ((c >> 4) & 0xf));
			lcd_data(0x0);
		}
	}
}
  a6:	5c 98       	cbi	0x0b, 4	; 11
  a8:	27 e0       	ldi	r18, 0x07	; 7
  aa:	30 e0       	ldi	r19, 0x00	; 0
  ac:	90 e0       	ldi	r25, 0x00	; 0
  ae:	5d 98       	cbi	0x0b, 5	; 11
  b0:	ac 01       	movw	r20, r24
  b2:	02 2e       	mov	r0, r18
  b4:	02 c0       	rjmp	.+4      	; 0xba <lcd_command+0x14>
  b6:	55 95       	asr	r21
  b8:	47 95       	ror	r20
  ba:	0a 94       	dec	r0
  bc:	e2 f7       	brpl	.-8      	; 0xb6 <lcd_command+0x10>
  be:	40 ff       	sbrs	r20, 0
  c0:	02 c0       	rjmp	.+4      	; 0xc6 <lcd_command+0x20>
  c2:	5e 9a       	sbi	0x0b, 6	; 11
  c4:	01 c0       	rjmp	.+2      	; 0xc8 <lcd_command+0x22>
  c6:	5e 98       	cbi	0x0b, 6	; 11
  c8:	5d 9a       	sbi	0x0b, 5	; 11
  ca:	21 50       	subi	r18, 0x01	; 1
  cc:	31 09       	sbc	r19, r1
  ce:	78 f7       	brcc	.-34     	; 0xae <lcd_command+0x8>
  d0:	08 95       	ret

000000d2 <lcd_init>:
  d2:	56 9a       	sbi	0x0a, 6	; 10
  d4:	55 9a       	sbi	0x0a, 5	; 10
  d6:	54 9a       	sbi	0x0a, 4	; 10
  d8:	53 9a       	sbi	0x0a, 3	; 10
  da:	52 9a       	sbi	0x0a, 2	; 10
  dc:	5a 98       	cbi	0x0b, 2	; 11
  de:	5b 98       	cbi	0x0b, 3	; 11
  e0:	2f ef       	ldi	r18, 0xFF	; 255
  e2:	89 e6       	ldi	r24, 0x69	; 105
  e4:	98 e1       	ldi	r25, 0x18	; 24
  e6:	21 50       	subi	r18, 0x01	; 1
  e8:	80 40       	sbci	r24, 0x00	; 0
  ea:	90 40       	sbci	r25, 0x00	; 0
  ec:	e1 f7       	brne	.-8      	; 0xe6 <lcd_init+0x14>
  ee:	00 c0       	rjmp	.+0      	; 0xf0 <lcd_init+0x1e>
  f0:	00 00       	nop
  f2:	5b 9a       	sbi	0x0b, 3	; 11
  f4:	83 ea       	ldi	r24, 0xA3	; 163
  f6:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_command>
  fa:	80 ea       	ldi	r24, 0xA0	; 160
  fc:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_command>
 100:	80 ec       	ldi	r24, 0xC0	; 192
 102:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_command>
 106:	80 e4       	ldi	r24, 0x40	; 64
 108:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_command>
 10c:	8c e2       	ldi	r24, 0x2C	; 44
 10e:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_command>
 112:	2f ef       	ldi	r18, 0xFF	; 255
 114:	80 e7       	ldi	r24, 0x70	; 112
 116:	92 e0       	ldi	r25, 0x02	; 2
 118:	21 50       	subi	r18, 0x01	; 1
 11a:	80 40       	sbci	r24, 0x00	; 0
 11c:	90 40       	sbci	r25, 0x00	; 0
 11e:	e1 f7       	brne	.-8      	; 0x118 <lcd_init+0x46>
 120:	00 c0       	rjmp	.+0      	; 0x122 <lcd_init+0x50>
 122:	00 00       	nop
 124:	8e e2       	ldi	r24, 0x2E	; 46
 126:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_command>
 12a:	2f ef       	ldi	r18, 0xFF	; 255
 12c:	80 e7       	ldi	r24, 0x70	; 112
 12e:	92 e0       	ldi	r25, 0x02	; 2
 130:	21 50       	subi	r18, 0x01	; 1
 132:	80 40       	sbci	r24, 0x00	; 0
 134:	90 40       	sbci	r25, 0x00	; 0
 136:	e1 f7       	brne	.-8      	; 0x130 <lcd_init+0x5e>
 138:	00 c0       	rjmp	.+0      	; 0x13a <lcd_init+0x68>
 13a:	00 00       	nop
 13c:	8f e2       	ldi	r24, 0x2F	; 47
 13e:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_command>
 142:	8f e3       	ldi	r24, 0x3F	; 63
 144:	9c e9       	ldi	r25, 0x9C	; 156
 146:	01 97       	sbiw	r24, 0x01	; 1
 148:	f1 f7       	brne	.-4      	; 0x146 <lcd_init+0x74>
 14a:	00 c0       	rjmp	.+0      	; 0x14c <lcd_init+0x7a>
 14c:	00 00       	nop
 14e:	86 e2       	ldi	r24, 0x26	; 38
 150:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_command>
 154:	08 95       	ret

00000156 <lcd_data>:
 156:	5c 9a       	sbi	0x0b, 4	; 11
 158:	27 e0       	ldi	r18, 0x07	; 7
 15a:	30 e0       	ldi	r19, 0x00	; 0
 15c:	90 e0       	ldi	r25, 0x00	; 0
 15e:	5d 98       	cbi	0x0b, 5	; 11
 160:	ac 01       	movw	r20, r24
 162:	02 2e       	mov	r0, r18
 164:	02 c0       	rjmp	.+4      	; 0x16a <lcd_data+0x14>
 166:	55 95       	asr	r21
 168:	47 95       	ror	r20
 16a:	0a 94       	dec	r0
 16c:	e2 f7       	brpl	.-8      	; 0x166 <lcd_data+0x10>
 16e:	40 ff       	sbrs	r20, 0
 170:	02 c0       	rjmp	.+4      	; 0x176 <lcd_data+0x20>
 172:	5e 9a       	sbi	0x0b, 6	; 11
 174:	01 c0       	rjmp	.+2      	; 0x178 <lcd_data+0x22>
 176:	5e 98       	cbi	0x0b, 6	; 11
 178:	5d 9a       	sbi	0x0b, 5	; 11
 17a:	21 50       	subi	r18, 0x01	; 1
 17c:	31 09       	sbc	r19, r1
 17e:	78 f7       	brcc	.-34     	; 0x15e <lcd_data+0x8>
 180:	08 95       	ret

00000182 <lcd_set_brightness>:
void lcd_data(uint8_t c) {
	A0_PORT |= _BV(A0);

	spiwrite(c);
}
void lcd_set_brightness(uint8_t val) {
 182:	cf 93       	push	r28
 184:	c8 2f       	mov	r28, r24
	lcd_command(CMD_SET_VOLUME_FIRST);
 186:	81 e8       	ldi	r24, 0x81	; 129
 188:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_command>
	lcd_command(CMD_SET_VOLUME_SECOND | (val & 0x3f));
 18c:	8c 2f       	mov	r24, r28
 18e:	8f 73       	andi	r24, 0x3F	; 63
 190:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_command>
}
 194:	cf 91       	pop	r28
 196:	08 95       	ret

00000198 <write_buffer>:

//write to the lcd buffer
void write_buffer(uint8_t *buff) {
 198:	cf 92       	push	r12
 19a:	df 92       	push	r13
 19c:	ef 92       	push	r14
 19e:	ff 92       	push	r15
 1a0:	0f 93       	push	r16
 1a2:	1f 93       	push	r17
 1a4:	cf 93       	push	r28
 1a6:	df 93       	push	r29
 1a8:	0f 2e       	mov	r0, r31
 1aa:	f0 e0       	ldi	r31, 0x00	; 0
 1ac:	ef 2e       	mov	r14, r31
 1ae:	f5 e0       	ldi	r31, 0x05	; 5
 1b0:	ff 2e       	mov	r15, r31
 1b2:	f0 2d       	mov	r31, r0
 1b4:	ec 01       	movw	r28, r24
 1b6:	0f 2e       	mov	r0, r31
 1b8:	f0 e1       	ldi	r31, 0x10	; 16
 1ba:	cf 2e       	mov	r12, r31
 1bc:	f5 e0       	ldi	r31, 0x05	; 5
 1be:	df 2e       	mov	r13, r31
 1c0:	f0 2d       	mov	r31, r0
	uint8_t c, p;

	for(p = 0; p < 8; p++) {
		
		lcd_command(CMD_SET_PAGE | pagemap[p]);
 1c2:	f7 01       	movw	r30, r14
 1c4:	80 81       	ld	r24, Z
 1c6:	f2 e0       	ldi	r31, 0x02	; 2
 1c8:	ef 0e       	add	r14, r31
 1ca:	f1 1c       	adc	r15, r1
 1cc:	80 6b       	ori	r24, 0xB0	; 176
 1ce:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_command>
		lcd_command(CMD_SET_COLUMN_LOWER | (0x0 & 0xf));
 1d2:	80 e0       	ldi	r24, 0x00	; 0
 1d4:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_command>
		lcd_command(CMD_SET_COLUMN_UPPER | ((0x0 >> 4) & 0xf));
 1d8:	80 e1       	ldi	r24, 0x10	; 16
 1da:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_command>
		lcd_command(CMD_RMW);
 1de:	80 ee       	ldi	r24, 0xE0	; 224
 1e0:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_command>
		lcd_data(0xff);
 1e4:	8f ef       	ldi	r24, 0xFF	; 255
 1e6:	0e 94 ab 00 	call	0x156	; 0x156 <lcd_data>
 1ea:	8e 01       	movw	r16, r28
 1ec:	00 58       	subi	r16, 0x80	; 128
 1ee:	1f 4f       	sbci	r17, 0xFF	; 255
		
		
		for(c = 0; c < 128; c++) {
			lcd_data(buff[(128*p)+c]);
 1f0:	89 91       	ld	r24, Y+
 1f2:	0e 94 ab 00 	call	0x156	; 0x156 <lcd_data>
		lcd_command(CMD_SET_COLUMN_UPPER | ((0x0 >> 4) & 0xf));
		lcd_command(CMD_RMW);
		lcd_data(0xff);
		
		
		for(c = 0; c < 128; c++) {
 1f6:	c0 17       	cp	r28, r16
 1f8:	d1 07       	cpc	r29, r17
 1fa:	d1 f7       	brne	.-12     	; 0x1f0 <write_buffer+0x58>
 1fc:	e8 01       	movw	r28, r16

//write to the lcd buffer
void write_buffer(uint8_t *buff) {
	uint8_t c, p;

	for(p = 0; p < 8; p++) {
 1fe:	ce 14       	cp	r12, r14
 200:	df 04       	cpc	r13, r15
 202:	f9 f6       	brne	.-66     	; 0x1c2 <write_buffer+0x2a>
		
		for(c = 0; c < 128; c++) {
			lcd_data(buff[(128*p)+c]);
		}
	}
}
 204:	df 91       	pop	r29
 206:	cf 91       	pop	r28
 208:	1f 91       	pop	r17
 20a:	0f 91       	pop	r16
 20c:	ff 90       	pop	r15
 20e:	ef 90       	pop	r14
 210:	df 90       	pop	r13
 212:	cf 90       	pop	r12
 214:	08 95       	ret

00000216 <clear_buffer>:

// function to clear everything in the buffer
void clear_buffer(uint8_t *buff) {
	memset(buff, 0, 1024);
 216:	20 e0       	ldi	r18, 0x00	; 0
 218:	34 e0       	ldi	r19, 0x04	; 4
 21a:	fc 01       	movw	r30, r24
 21c:	a9 01       	movw	r20, r18
 21e:	11 92       	st	Z+, r1
 220:	41 50       	subi	r20, 0x01	; 1
 222:	50 40       	sbci	r21, 0x00	; 0
 224:	e1 f7       	brne	.-8      	; 0x21e <clear_buffer+0x8>
 226:	08 95       	ret

00000228 <uart_putchar>:
void uart_init(void);

static FILE uart_output = FDEV_SETUP_STREAM(uart_putchar, NULL, _FDEV_SETUP_WRITE);
static FILE uart_input = FDEV_SETUP_STREAM(NULL, uart_getchar, _FDEV_SETUP_READ);

int uart_putchar(char c, FILE *stream) {
 228:	cf 93       	push	r28
 22a:	c8 2f       	mov	r28, r24
	if (c == '\n') {
 22c:	8a 30       	cpi	r24, 0x0A	; 10
 22e:	19 f4       	brne	.+6      	; 0x236 <uart_putchar+0xe>
		uart_putchar('\r', stream);
 230:	8d e0       	ldi	r24, 0x0D	; 13
 232:	0e 94 14 01 	call	0x228	; 0x228 <uart_putchar>
	}
	loop_until_bit_is_set(UCSR0A, UDRE0);
 236:	e0 ec       	ldi	r30, 0xC0	; 192
 238:	f0 e0       	ldi	r31, 0x00	; 0
 23a:	80 81       	ld	r24, Z
 23c:	85 ff       	sbrs	r24, 5
 23e:	fd cf       	rjmp	.-6      	; 0x23a <uart_putchar+0x12>
	UDR0 = c;
 240:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	return 0;
}
 244:	80 e0       	ldi	r24, 0x00	; 0
 246:	90 e0       	ldi	r25, 0x00	; 0
 248:	cf 91       	pop	r28
 24a:	08 95       	ret

0000024c <uart_getchar>:

int uart_getchar(FILE *stream) {
	loop_until_bit_is_set(UCSR0A, RXC0); /* Wait until data exists. */
 24c:	e0 ec       	ldi	r30, 0xC0	; 192
 24e:	f0 e0       	ldi	r31, 0x00	; 0
 250:	80 81       	ld	r24, Z
 252:	88 23       	and	r24, r24
 254:	ec f7       	brge	.-6      	; 0x250 <uart_getchar+0x4>
	return UDR0;
 256:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
}
 25a:	90 e0       	ldi	r25, 0x00	; 0
 25c:	08 95       	ret

0000025e <uart_init>:

void uart_init(void) {
	UBRR0H = UBRRH_VALUE;
 25e:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = UBRRL_VALUE;
 262:	87 e6       	ldi	r24, 0x67	; 103
 264:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>

	#if USE_2X
	UCSR0A |= _BV(U2X0);
	#else
	UCSR0A &= ~(_BV(U2X0));
 268:	e0 ec       	ldi	r30, 0xC0	; 192
 26a:	f0 e0       	ldi	r31, 0x00	; 0
 26c:	80 81       	ld	r24, Z
 26e:	8d 7f       	andi	r24, 0xFD	; 253
 270:	80 83       	st	Z, r24
	#endif

	UCSR0C = _BV(UCSZ01) | _BV(UCSZ00); /* 8-bit data */
 272:	86 e0       	ldi	r24, 0x06	; 6
 274:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
	UCSR0B = _BV(RXEN0) | _BV(TXEN0);   /* Enable RX and TX */
 278:	88 e1       	ldi	r24, 0x18	; 24
 27a:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>

    // Redirect stdin and stdout so functions like printf and getchar work.
	stdout = &uart_output;
 27e:	e0 e4       	ldi	r30, 0x40	; 64
 280:	f5 e0       	ldi	r31, 0x05	; 5
 282:	8e e1       	ldi	r24, 0x1E	; 30
 284:	95 e0       	ldi	r25, 0x05	; 5
 286:	93 83       	std	Z+3, r25	; 0x03
 288:	82 83       	std	Z+2, r24	; 0x02
	stdin = &uart_input;
 28a:	80 e1       	ldi	r24, 0x10	; 16
 28c:	95 e0       	ldi	r25, 0x05	; 5
 28e:	91 83       	std	Z+1, r25	; 0x01
 290:	80 83       	st	Z, r24
 292:	08 95       	ret

00000294 <setupADC>:
uint16_t x_coor;
uint16_t y_coor;

void setupADC(void){

	ADMUX |= (1 << REFS0); 	// Setting ADC to use VCC as reference voltage
 294:	ec e7       	ldi	r30, 0x7C	; 124
 296:	f0 e0       	ldi	r31, 0x00	; 0
 298:	80 81       	ld	r24, Z
 29a:	80 64       	ori	r24, 0x40	; 64
 29c:	80 83       	st	Z, r24
	//  Use A0 pin to read input

	ADCSRA |= (1 << ADATE) | (1 << ADEN) | (1<< ADPS1) ; // Turn ADC on,
 29e:	ea e7       	ldi	r30, 0x7A	; 122
 2a0:	f0 e0       	ldi	r31, 0x00	; 0
 2a2:	80 81       	ld	r24, Z
 2a4:	82 6a       	ori	r24, 0xA2	; 162
 2a6:	80 83       	st	Z, r24
 2a8:	08 95       	ret

000002aa <adcStartConversion>:
														 //  Use pre-scaler as 4
														 //  Set auto-trigger.
}

void adcStartConversion(void){
	ADCSRA |= (1 << ADSC);
 2aa:	ea e7       	ldi	r30, 0x7A	; 122
 2ac:	f0 e0       	ldi	r31, 0x00	; 0
 2ae:	80 81       	ld	r24, Z
 2b0:	80 64       	ori	r24, 0x40	; 64
 2b2:	80 83       	st	Z, r24
 2b4:	08 95       	ret

000002b6 <getADCval>:
}

void getADCval() {

	// Disable the ADC mode
	ADMUX &= ~(1 << MUX3);
 2b6:	ec e7       	ldi	r30, 0x7C	; 124
 2b8:	f0 e0       	ldi	r31, 0x00	; 0
 2ba:	80 81       	ld	r24, Z
 2bc:	87 7f       	andi	r24, 0xF7	; 247
 2be:	80 83       	st	Z, r24
	
	// Set X- , X+ to digital pins.
	DDRC  = (1 << PORTC1) | (1 << PORTC3);
 2c0:	8a e0       	ldi	r24, 0x0A	; 10
 2c2:	87 b9       	out	0x07, r24	; 7
	// Set X- high and X+ low.
	PORTC |= (1 << PORTC3);
 2c4:	43 9a       	sbi	0x08, 3	; 8
	PORTC &= ~(1 << PORTC1);
 2c6:	41 98       	cbi	0x08, 1	; 8
	
	// Set Y- Y+ to ADC input.
	ADMUX |= (0 << MUX0);
 2c8:	80 81       	ld	r24, Z
 2ca:	80 83       	st	Z, r24
	
	// Read the x_coor here.
	x_coor = ADC;
 2cc:	a8 e7       	ldi	r26, 0x78	; 120
 2ce:	b0 e0       	ldi	r27, 0x00	; 0
 2d0:	8d 91       	ld	r24, X+
 2d2:	9c 91       	ld	r25, X
 2d4:	11 97       	sbiw	r26, 0x01	; 1
 2d6:	90 93 3f 05 	sts	0x053F, r25	; 0x80053f <x_coor+0x1>
 2da:	80 93 3e 05 	sts	0x053E, r24	; 0x80053e <x_coor>
	
	// Now set configuration for the y_coor.
	// Disable the ADC mode.
	ADMUX &= ~(1 << MUX0);
 2de:	80 81       	ld	r24, Z
 2e0:	8e 7f       	andi	r24, 0xFE	; 254
 2e2:	80 83       	st	Z, r24
	
	// Set Y-, Y+ to digital pins.
	DDRC = (1 << PORTC0) | (1 << PORTC2);
 2e4:	85 e0       	ldi	r24, 0x05	; 5
 2e6:	87 b9       	out	0x07, r24	; 7
	// Set Y- high, Y+ low.
	PORTC |= (1 << PORTC0);
 2e8:	40 9a       	sbi	0x08, 0	; 8
	PORTC &= ~(1 << PORTC2);
 2ea:	42 98       	cbi	0x08, 2	; 8
	
	// Set X- X+ to ADC input.
	ADMUX |= (1 << MUX3);
 2ec:	80 81       	ld	r24, Z
 2ee:	88 60       	ori	r24, 0x08	; 8
 2f0:	80 83       	st	Z, r24
	
	// Read the y_coor here.
	y_coor = ADC;
 2f2:	8d 91       	ld	r24, X+
 2f4:	9c 91       	ld	r25, X
 2f6:	90 93 3d 05 	sts	0x053D, r25	; 0x80053d <__data_end+0x1>
 2fa:	80 93 3c 05 	sts	0x053C, r24	; 0x80053c <__data_end>
 2fe:	08 95       	ret

00000300 <main>:
}

int main(void)
{
	//setting up the gpio for backlight
	DDRD |= 0x80;
 300:	57 9a       	sbi	0x0a, 7	; 10
	PORTD &= ~0x80;
 302:	5f 98       	cbi	0x0b, 7	; 11
	PORTD |= 0x00;
 304:	8b b1       	in	r24, 0x0b	; 11
 306:	8b b9       	out	0x0b, r24	; 11
	
	DDRB |= 0x05;
 308:	84 b1       	in	r24, 0x04	; 4
 30a:	85 60       	ori	r24, 0x05	; 5
 30c:	84 b9       	out	0x04, r24	; 4
	PORTB &= ~0x05;
 30e:	85 b1       	in	r24, 0x05	; 5
 310:	8a 7f       	andi	r24, 0xFA	; 250
 312:	85 b9       	out	0x05, r24	; 5
	PORTB |= 0x00;
 314:	85 b1       	in	r24, 0x05	; 5
 316:	85 b9       	out	0x05, r24	; 5
	
	//lcd initialisation
	lcd_init();
 318:	0e 94 69 00 	call	0xd2	; 0xd2 <lcd_init>
	lcd_command(CMD_DISPLAY_ON);
 31c:	8f ea       	ldi	r24, 0xAF	; 175
 31e:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_command>
	lcd_set_brightness(0x18);
 322:	88 e1       	ldi	r24, 0x18	; 24
 324:	0e 94 c1 00 	call	0x182	; 0x182 <lcd_set_brightness>
	write_buffer(buff);
 328:	80 e0       	ldi	r24, 0x00	; 0
 32a:	91 e0       	ldi	r25, 0x01	; 1
 32c:	0e 94 cc 00 	call	0x198	; 0x198 <write_buffer>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 330:	2f ef       	ldi	r18, 0xFF	; 255
 332:	83 ed       	ldi	r24, 0xD3	; 211
 334:	90 e3       	ldi	r25, 0x30	; 48
 336:	21 50       	subi	r18, 0x01	; 1
 338:	80 40       	sbci	r24, 0x00	; 0
 33a:	90 40       	sbci	r25, 0x00	; 0
 33c:	e1 f7       	brne	.-8      	; 0x336 <main+0x36>
 33e:	00 c0       	rjmp	.+0      	; 0x340 <main+0x40>
 340:	00 00       	nop
	_delay_ms(1000);
	clear_buffer(buff);
 342:	80 e0       	ldi	r24, 0x00	; 0
 344:	91 e0       	ldi	r25, 0x01	; 1
 346:	0e 94 0b 01 	call	0x216	; 0x216 <clear_buffer>
	
	uart_init();
 34a:	0e 94 2f 01 	call	0x25e	; 0x25e <uart_init>
	
	setupADC();
 34e:	0e 94 4a 01 	call	0x294	; 0x294 <setupADC>
	adcStartConversion();
 352:	0e 94 55 01 	call	0x2aa	; 0x2aa <adcStartConversion>
		//drawcircle(buff, 15, 15, 8, BLACK);

		//write_buffer(buff);
		getADCval();
		
		printf("x: %u, y: %u \n", x_coor, y_coor);
 356:	cc e2       	ldi	r28, 0x2C	; 44
 358:	d5 e0       	ldi	r29, 0x05	; 5
//		fillrect(buff, 0,0, 80, 60, BLACK);

		//drawcircle(buff, 15, 15, 8, BLACK);

		//write_buffer(buff);
		getADCval();
 35a:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <getADCval>
		
		printf("x: %u, y: %u \n", x_coor, y_coor);
 35e:	80 91 3d 05 	lds	r24, 0x053D	; 0x80053d <__data_end+0x1>
 362:	8f 93       	push	r24
 364:	80 91 3c 05 	lds	r24, 0x053C	; 0x80053c <__data_end>
 368:	8f 93       	push	r24
 36a:	80 91 3f 05 	lds	r24, 0x053F	; 0x80053f <x_coor+0x1>
 36e:	8f 93       	push	r24
 370:	80 91 3e 05 	lds	r24, 0x053E	; 0x80053e <x_coor>
 374:	8f 93       	push	r24
 376:	df 93       	push	r29
 378:	cf 93       	push	r28
 37a:	0e 94 c6 01 	call	0x38c	; 0x38c <printf>
 37e:	0f 90       	pop	r0
 380:	0f 90       	pop	r0
 382:	0f 90       	pop	r0
 384:	0f 90       	pop	r0
 386:	0f 90       	pop	r0
 388:	0f 90       	pop	r0
 38a:	e7 cf       	rjmp	.-50     	; 0x35a <main+0x5a>

0000038c <printf>:
 38c:	a0 e0       	ldi	r26, 0x00	; 0
 38e:	b0 e0       	ldi	r27, 0x00	; 0
 390:	ec ec       	ldi	r30, 0xCC	; 204
 392:	f1 e0       	ldi	r31, 0x01	; 1
 394:	0c 94 7d 04 	jmp	0x8fa	; 0x8fa <__prologue_saves__+0x20>
 398:	ae 01       	movw	r20, r28
 39a:	4b 5f       	subi	r20, 0xFB	; 251
 39c:	5f 4f       	sbci	r21, 0xFF	; 255
 39e:	fa 01       	movw	r30, r20
 3a0:	61 91       	ld	r22, Z+
 3a2:	71 91       	ld	r23, Z+
 3a4:	af 01       	movw	r20, r30
 3a6:	80 91 42 05 	lds	r24, 0x0542	; 0x800542 <__iob+0x2>
 3aa:	90 91 43 05 	lds	r25, 0x0543	; 0x800543 <__iob+0x3>
 3ae:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <vfprintf>
 3b2:	e2 e0       	ldi	r30, 0x02	; 2
 3b4:	0c 94 99 04 	jmp	0x932	; 0x932 <__epilogue_restores__+0x20>

000003b8 <vfprintf>:
 3b8:	ab e0       	ldi	r26, 0x0B	; 11
 3ba:	b0 e0       	ldi	r27, 0x00	; 0
 3bc:	e2 ee       	ldi	r30, 0xE2	; 226
 3be:	f1 e0       	ldi	r31, 0x01	; 1
 3c0:	0c 94 6d 04 	jmp	0x8da	; 0x8da <__prologue_saves__>
 3c4:	6c 01       	movw	r12, r24
 3c6:	7b 01       	movw	r14, r22
 3c8:	8a 01       	movw	r16, r20
 3ca:	fc 01       	movw	r30, r24
 3cc:	17 82       	std	Z+7, r1	; 0x07
 3ce:	16 82       	std	Z+6, r1	; 0x06
 3d0:	83 81       	ldd	r24, Z+3	; 0x03
 3d2:	81 ff       	sbrs	r24, 1
 3d4:	cc c1       	rjmp	.+920    	; 0x76e <__LOCK_REGION_LENGTH__+0x36e>
 3d6:	ce 01       	movw	r24, r28
 3d8:	01 96       	adiw	r24, 0x01	; 1
 3da:	3c 01       	movw	r6, r24
 3dc:	f6 01       	movw	r30, r12
 3de:	93 81       	ldd	r25, Z+3	; 0x03
 3e0:	f7 01       	movw	r30, r14
 3e2:	93 fd       	sbrc	r25, 3
 3e4:	85 91       	lpm	r24, Z+
 3e6:	93 ff       	sbrs	r25, 3
 3e8:	81 91       	ld	r24, Z+
 3ea:	7f 01       	movw	r14, r30
 3ec:	88 23       	and	r24, r24
 3ee:	09 f4       	brne	.+2      	; 0x3f2 <vfprintf+0x3a>
 3f0:	ba c1       	rjmp	.+884    	; 0x766 <__LOCK_REGION_LENGTH__+0x366>
 3f2:	85 32       	cpi	r24, 0x25	; 37
 3f4:	39 f4       	brne	.+14     	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 3f6:	93 fd       	sbrc	r25, 3
 3f8:	85 91       	lpm	r24, Z+
 3fa:	93 ff       	sbrs	r25, 3
 3fc:	81 91       	ld	r24, Z+
 3fe:	7f 01       	movw	r14, r30
 400:	85 32       	cpi	r24, 0x25	; 37
 402:	29 f4       	brne	.+10     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 404:	b6 01       	movw	r22, r12
 406:	90 e0       	ldi	r25, 0x00	; 0
 408:	0e 94 d3 03 	call	0x7a6	; 0x7a6 <fputc>
 40c:	e7 cf       	rjmp	.-50     	; 0x3dc <vfprintf+0x24>
 40e:	91 2c       	mov	r9, r1
 410:	21 2c       	mov	r2, r1
 412:	31 2c       	mov	r3, r1
 414:	ff e1       	ldi	r31, 0x1F	; 31
 416:	f3 15       	cp	r31, r3
 418:	d8 f0       	brcs	.+54     	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
 41a:	8b 32       	cpi	r24, 0x2B	; 43
 41c:	79 f0       	breq	.+30     	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
 41e:	38 f4       	brcc	.+14     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 420:	80 32       	cpi	r24, 0x20	; 32
 422:	79 f0       	breq	.+30     	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 424:	83 32       	cpi	r24, 0x23	; 35
 426:	a1 f4       	brne	.+40     	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
 428:	23 2d       	mov	r18, r3
 42a:	20 61       	ori	r18, 0x10	; 16
 42c:	1d c0       	rjmp	.+58     	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
 42e:	8d 32       	cpi	r24, 0x2D	; 45
 430:	61 f0       	breq	.+24     	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 432:	80 33       	cpi	r24, 0x30	; 48
 434:	69 f4       	brne	.+26     	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
 436:	23 2d       	mov	r18, r3
 438:	21 60       	ori	r18, 0x01	; 1
 43a:	16 c0       	rjmp	.+44     	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
 43c:	83 2d       	mov	r24, r3
 43e:	82 60       	ori	r24, 0x02	; 2
 440:	38 2e       	mov	r3, r24
 442:	e3 2d       	mov	r30, r3
 444:	e4 60       	ori	r30, 0x04	; 4
 446:	3e 2e       	mov	r3, r30
 448:	2a c0       	rjmp	.+84     	; 0x49e <__LOCK_REGION_LENGTH__+0x9e>
 44a:	f3 2d       	mov	r31, r3
 44c:	f8 60       	ori	r31, 0x08	; 8
 44e:	1d c0       	rjmp	.+58     	; 0x48a <__LOCK_REGION_LENGTH__+0x8a>
 450:	37 fc       	sbrc	r3, 7
 452:	2d c0       	rjmp	.+90     	; 0x4ae <__LOCK_REGION_LENGTH__+0xae>
 454:	20 ed       	ldi	r18, 0xD0	; 208
 456:	28 0f       	add	r18, r24
 458:	2a 30       	cpi	r18, 0x0A	; 10
 45a:	40 f0       	brcs	.+16     	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
 45c:	8e 32       	cpi	r24, 0x2E	; 46
 45e:	b9 f4       	brne	.+46     	; 0x48e <__LOCK_REGION_LENGTH__+0x8e>
 460:	36 fc       	sbrc	r3, 6
 462:	81 c1       	rjmp	.+770    	; 0x766 <__LOCK_REGION_LENGTH__+0x366>
 464:	23 2d       	mov	r18, r3
 466:	20 64       	ori	r18, 0x40	; 64
 468:	32 2e       	mov	r3, r18
 46a:	19 c0       	rjmp	.+50     	; 0x49e <__LOCK_REGION_LENGTH__+0x9e>
 46c:	36 fe       	sbrs	r3, 6
 46e:	06 c0       	rjmp	.+12     	; 0x47c <__LOCK_REGION_LENGTH__+0x7c>
 470:	8a e0       	ldi	r24, 0x0A	; 10
 472:	98 9e       	mul	r9, r24
 474:	20 0d       	add	r18, r0
 476:	11 24       	eor	r1, r1
 478:	92 2e       	mov	r9, r18
 47a:	11 c0       	rjmp	.+34     	; 0x49e <__LOCK_REGION_LENGTH__+0x9e>
 47c:	ea e0       	ldi	r30, 0x0A	; 10
 47e:	2e 9e       	mul	r2, r30
 480:	20 0d       	add	r18, r0
 482:	11 24       	eor	r1, r1
 484:	22 2e       	mov	r2, r18
 486:	f3 2d       	mov	r31, r3
 488:	f0 62       	ori	r31, 0x20	; 32
 48a:	3f 2e       	mov	r3, r31
 48c:	08 c0       	rjmp	.+16     	; 0x49e <__LOCK_REGION_LENGTH__+0x9e>
 48e:	8c 36       	cpi	r24, 0x6C	; 108
 490:	21 f4       	brne	.+8      	; 0x49a <__LOCK_REGION_LENGTH__+0x9a>
 492:	83 2d       	mov	r24, r3
 494:	80 68       	ori	r24, 0x80	; 128
 496:	38 2e       	mov	r3, r24
 498:	02 c0       	rjmp	.+4      	; 0x49e <__LOCK_REGION_LENGTH__+0x9e>
 49a:	88 36       	cpi	r24, 0x68	; 104
 49c:	41 f4       	brne	.+16     	; 0x4ae <__LOCK_REGION_LENGTH__+0xae>
 49e:	f7 01       	movw	r30, r14
 4a0:	93 fd       	sbrc	r25, 3
 4a2:	85 91       	lpm	r24, Z+
 4a4:	93 ff       	sbrs	r25, 3
 4a6:	81 91       	ld	r24, Z+
 4a8:	7f 01       	movw	r14, r30
 4aa:	81 11       	cpse	r24, r1
 4ac:	b3 cf       	rjmp	.-154    	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 4ae:	98 2f       	mov	r25, r24
 4b0:	9f 7d       	andi	r25, 0xDF	; 223
 4b2:	95 54       	subi	r25, 0x45	; 69
 4b4:	93 30       	cpi	r25, 0x03	; 3
 4b6:	28 f4       	brcc	.+10     	; 0x4c2 <__LOCK_REGION_LENGTH__+0xc2>
 4b8:	0c 5f       	subi	r16, 0xFC	; 252
 4ba:	1f 4f       	sbci	r17, 0xFF	; 255
 4bc:	9f e3       	ldi	r25, 0x3F	; 63
 4be:	99 83       	std	Y+1, r25	; 0x01
 4c0:	0d c0       	rjmp	.+26     	; 0x4dc <__LOCK_REGION_LENGTH__+0xdc>
 4c2:	83 36       	cpi	r24, 0x63	; 99
 4c4:	31 f0       	breq	.+12     	; 0x4d2 <__LOCK_REGION_LENGTH__+0xd2>
 4c6:	83 37       	cpi	r24, 0x73	; 115
 4c8:	71 f0       	breq	.+28     	; 0x4e6 <__LOCK_REGION_LENGTH__+0xe6>
 4ca:	83 35       	cpi	r24, 0x53	; 83
 4cc:	09 f0       	breq	.+2      	; 0x4d0 <__LOCK_REGION_LENGTH__+0xd0>
 4ce:	59 c0       	rjmp	.+178    	; 0x582 <__LOCK_REGION_LENGTH__+0x182>
 4d0:	21 c0       	rjmp	.+66     	; 0x514 <__LOCK_REGION_LENGTH__+0x114>
 4d2:	f8 01       	movw	r30, r16
 4d4:	80 81       	ld	r24, Z
 4d6:	89 83       	std	Y+1, r24	; 0x01
 4d8:	0e 5f       	subi	r16, 0xFE	; 254
 4da:	1f 4f       	sbci	r17, 0xFF	; 255
 4dc:	88 24       	eor	r8, r8
 4de:	83 94       	inc	r8
 4e0:	91 2c       	mov	r9, r1
 4e2:	53 01       	movw	r10, r6
 4e4:	13 c0       	rjmp	.+38     	; 0x50c <__LOCK_REGION_LENGTH__+0x10c>
 4e6:	28 01       	movw	r4, r16
 4e8:	f2 e0       	ldi	r31, 0x02	; 2
 4ea:	4f 0e       	add	r4, r31
 4ec:	51 1c       	adc	r5, r1
 4ee:	f8 01       	movw	r30, r16
 4f0:	a0 80       	ld	r10, Z
 4f2:	b1 80       	ldd	r11, Z+1	; 0x01
 4f4:	36 fe       	sbrs	r3, 6
 4f6:	03 c0       	rjmp	.+6      	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
 4f8:	69 2d       	mov	r22, r9
 4fa:	70 e0       	ldi	r23, 0x00	; 0
 4fc:	02 c0       	rjmp	.+4      	; 0x502 <__LOCK_REGION_LENGTH__+0x102>
 4fe:	6f ef       	ldi	r22, 0xFF	; 255
 500:	7f ef       	ldi	r23, 0xFF	; 255
 502:	c5 01       	movw	r24, r10
 504:	0e 94 c8 03 	call	0x790	; 0x790 <strnlen>
 508:	4c 01       	movw	r8, r24
 50a:	82 01       	movw	r16, r4
 50c:	f3 2d       	mov	r31, r3
 50e:	ff 77       	andi	r31, 0x7F	; 127
 510:	3f 2e       	mov	r3, r31
 512:	16 c0       	rjmp	.+44     	; 0x540 <__LOCK_REGION_LENGTH__+0x140>
 514:	28 01       	movw	r4, r16
 516:	22 e0       	ldi	r18, 0x02	; 2
 518:	42 0e       	add	r4, r18
 51a:	51 1c       	adc	r5, r1
 51c:	f8 01       	movw	r30, r16
 51e:	a0 80       	ld	r10, Z
 520:	b1 80       	ldd	r11, Z+1	; 0x01
 522:	36 fe       	sbrs	r3, 6
 524:	03 c0       	rjmp	.+6      	; 0x52c <__LOCK_REGION_LENGTH__+0x12c>
 526:	69 2d       	mov	r22, r9
 528:	70 e0       	ldi	r23, 0x00	; 0
 52a:	02 c0       	rjmp	.+4      	; 0x530 <__LOCK_REGION_LENGTH__+0x130>
 52c:	6f ef       	ldi	r22, 0xFF	; 255
 52e:	7f ef       	ldi	r23, 0xFF	; 255
 530:	c5 01       	movw	r24, r10
 532:	0e 94 bd 03 	call	0x77a	; 0x77a <strnlen_P>
 536:	4c 01       	movw	r8, r24
 538:	f3 2d       	mov	r31, r3
 53a:	f0 68       	ori	r31, 0x80	; 128
 53c:	3f 2e       	mov	r3, r31
 53e:	82 01       	movw	r16, r4
 540:	33 fc       	sbrc	r3, 3
 542:	1b c0       	rjmp	.+54     	; 0x57a <__LOCK_REGION_LENGTH__+0x17a>
 544:	82 2d       	mov	r24, r2
 546:	90 e0       	ldi	r25, 0x00	; 0
 548:	88 16       	cp	r8, r24
 54a:	99 06       	cpc	r9, r25
 54c:	b0 f4       	brcc	.+44     	; 0x57a <__LOCK_REGION_LENGTH__+0x17a>
 54e:	b6 01       	movw	r22, r12
 550:	80 e2       	ldi	r24, 0x20	; 32
 552:	90 e0       	ldi	r25, 0x00	; 0
 554:	0e 94 d3 03 	call	0x7a6	; 0x7a6 <fputc>
 558:	2a 94       	dec	r2
 55a:	f4 cf       	rjmp	.-24     	; 0x544 <__LOCK_REGION_LENGTH__+0x144>
 55c:	f5 01       	movw	r30, r10
 55e:	37 fc       	sbrc	r3, 7
 560:	85 91       	lpm	r24, Z+
 562:	37 fe       	sbrs	r3, 7
 564:	81 91       	ld	r24, Z+
 566:	5f 01       	movw	r10, r30
 568:	b6 01       	movw	r22, r12
 56a:	90 e0       	ldi	r25, 0x00	; 0
 56c:	0e 94 d3 03 	call	0x7a6	; 0x7a6 <fputc>
 570:	21 10       	cpse	r2, r1
 572:	2a 94       	dec	r2
 574:	21 e0       	ldi	r18, 0x01	; 1
 576:	82 1a       	sub	r8, r18
 578:	91 08       	sbc	r9, r1
 57a:	81 14       	cp	r8, r1
 57c:	91 04       	cpc	r9, r1
 57e:	71 f7       	brne	.-36     	; 0x55c <__LOCK_REGION_LENGTH__+0x15c>
 580:	e8 c0       	rjmp	.+464    	; 0x752 <__LOCK_REGION_LENGTH__+0x352>
 582:	84 36       	cpi	r24, 0x64	; 100
 584:	11 f0       	breq	.+4      	; 0x58a <__LOCK_REGION_LENGTH__+0x18a>
 586:	89 36       	cpi	r24, 0x69	; 105
 588:	41 f5       	brne	.+80     	; 0x5da <__LOCK_REGION_LENGTH__+0x1da>
 58a:	f8 01       	movw	r30, r16
 58c:	37 fe       	sbrs	r3, 7
 58e:	07 c0       	rjmp	.+14     	; 0x59e <__LOCK_REGION_LENGTH__+0x19e>
 590:	60 81       	ld	r22, Z
 592:	71 81       	ldd	r23, Z+1	; 0x01
 594:	82 81       	ldd	r24, Z+2	; 0x02
 596:	93 81       	ldd	r25, Z+3	; 0x03
 598:	0c 5f       	subi	r16, 0xFC	; 252
 59a:	1f 4f       	sbci	r17, 0xFF	; 255
 59c:	08 c0       	rjmp	.+16     	; 0x5ae <__LOCK_REGION_LENGTH__+0x1ae>
 59e:	60 81       	ld	r22, Z
 5a0:	71 81       	ldd	r23, Z+1	; 0x01
 5a2:	07 2e       	mov	r0, r23
 5a4:	00 0c       	add	r0, r0
 5a6:	88 0b       	sbc	r24, r24
 5a8:	99 0b       	sbc	r25, r25
 5aa:	0e 5f       	subi	r16, 0xFE	; 254
 5ac:	1f 4f       	sbci	r17, 0xFF	; 255
 5ae:	f3 2d       	mov	r31, r3
 5b0:	ff 76       	andi	r31, 0x6F	; 111
 5b2:	3f 2e       	mov	r3, r31
 5b4:	97 ff       	sbrs	r25, 7
 5b6:	09 c0       	rjmp	.+18     	; 0x5ca <__LOCK_REGION_LENGTH__+0x1ca>
 5b8:	90 95       	com	r25
 5ba:	80 95       	com	r24
 5bc:	70 95       	com	r23
 5be:	61 95       	neg	r22
 5c0:	7f 4f       	sbci	r23, 0xFF	; 255
 5c2:	8f 4f       	sbci	r24, 0xFF	; 255
 5c4:	9f 4f       	sbci	r25, 0xFF	; 255
 5c6:	f0 68       	ori	r31, 0x80	; 128
 5c8:	3f 2e       	mov	r3, r31
 5ca:	2a e0       	ldi	r18, 0x0A	; 10
 5cc:	30 e0       	ldi	r19, 0x00	; 0
 5ce:	a3 01       	movw	r20, r6
 5d0:	0e 94 0f 04 	call	0x81e	; 0x81e <__ultoa_invert>
 5d4:	88 2e       	mov	r8, r24
 5d6:	86 18       	sub	r8, r6
 5d8:	45 c0       	rjmp	.+138    	; 0x664 <__LOCK_REGION_LENGTH__+0x264>
 5da:	85 37       	cpi	r24, 0x75	; 117
 5dc:	31 f4       	brne	.+12     	; 0x5ea <__LOCK_REGION_LENGTH__+0x1ea>
 5de:	23 2d       	mov	r18, r3
 5e0:	2f 7e       	andi	r18, 0xEF	; 239
 5e2:	b2 2e       	mov	r11, r18
 5e4:	2a e0       	ldi	r18, 0x0A	; 10
 5e6:	30 e0       	ldi	r19, 0x00	; 0
 5e8:	25 c0       	rjmp	.+74     	; 0x634 <__LOCK_REGION_LENGTH__+0x234>
 5ea:	93 2d       	mov	r25, r3
 5ec:	99 7f       	andi	r25, 0xF9	; 249
 5ee:	b9 2e       	mov	r11, r25
 5f0:	8f 36       	cpi	r24, 0x6F	; 111
 5f2:	c1 f0       	breq	.+48     	; 0x624 <__LOCK_REGION_LENGTH__+0x224>
 5f4:	18 f4       	brcc	.+6      	; 0x5fc <__LOCK_REGION_LENGTH__+0x1fc>
 5f6:	88 35       	cpi	r24, 0x58	; 88
 5f8:	79 f0       	breq	.+30     	; 0x618 <__LOCK_REGION_LENGTH__+0x218>
 5fa:	b5 c0       	rjmp	.+362    	; 0x766 <__LOCK_REGION_LENGTH__+0x366>
 5fc:	80 37       	cpi	r24, 0x70	; 112
 5fe:	19 f0       	breq	.+6      	; 0x606 <__LOCK_REGION_LENGTH__+0x206>
 600:	88 37       	cpi	r24, 0x78	; 120
 602:	21 f0       	breq	.+8      	; 0x60c <__LOCK_REGION_LENGTH__+0x20c>
 604:	b0 c0       	rjmp	.+352    	; 0x766 <__LOCK_REGION_LENGTH__+0x366>
 606:	e9 2f       	mov	r30, r25
 608:	e0 61       	ori	r30, 0x10	; 16
 60a:	be 2e       	mov	r11, r30
 60c:	b4 fe       	sbrs	r11, 4
 60e:	0d c0       	rjmp	.+26     	; 0x62a <__LOCK_REGION_LENGTH__+0x22a>
 610:	fb 2d       	mov	r31, r11
 612:	f4 60       	ori	r31, 0x04	; 4
 614:	bf 2e       	mov	r11, r31
 616:	09 c0       	rjmp	.+18     	; 0x62a <__LOCK_REGION_LENGTH__+0x22a>
 618:	34 fe       	sbrs	r3, 4
 61a:	0a c0       	rjmp	.+20     	; 0x630 <__LOCK_REGION_LENGTH__+0x230>
 61c:	29 2f       	mov	r18, r25
 61e:	26 60       	ori	r18, 0x06	; 6
 620:	b2 2e       	mov	r11, r18
 622:	06 c0       	rjmp	.+12     	; 0x630 <__LOCK_REGION_LENGTH__+0x230>
 624:	28 e0       	ldi	r18, 0x08	; 8
 626:	30 e0       	ldi	r19, 0x00	; 0
 628:	05 c0       	rjmp	.+10     	; 0x634 <__LOCK_REGION_LENGTH__+0x234>
 62a:	20 e1       	ldi	r18, 0x10	; 16
 62c:	30 e0       	ldi	r19, 0x00	; 0
 62e:	02 c0       	rjmp	.+4      	; 0x634 <__LOCK_REGION_LENGTH__+0x234>
 630:	20 e1       	ldi	r18, 0x10	; 16
 632:	32 e0       	ldi	r19, 0x02	; 2
 634:	f8 01       	movw	r30, r16
 636:	b7 fe       	sbrs	r11, 7
 638:	07 c0       	rjmp	.+14     	; 0x648 <__LOCK_REGION_LENGTH__+0x248>
 63a:	60 81       	ld	r22, Z
 63c:	71 81       	ldd	r23, Z+1	; 0x01
 63e:	82 81       	ldd	r24, Z+2	; 0x02
 640:	93 81       	ldd	r25, Z+3	; 0x03
 642:	0c 5f       	subi	r16, 0xFC	; 252
 644:	1f 4f       	sbci	r17, 0xFF	; 255
 646:	06 c0       	rjmp	.+12     	; 0x654 <__LOCK_REGION_LENGTH__+0x254>
 648:	60 81       	ld	r22, Z
 64a:	71 81       	ldd	r23, Z+1	; 0x01
 64c:	80 e0       	ldi	r24, 0x00	; 0
 64e:	90 e0       	ldi	r25, 0x00	; 0
 650:	0e 5f       	subi	r16, 0xFE	; 254
 652:	1f 4f       	sbci	r17, 0xFF	; 255
 654:	a3 01       	movw	r20, r6
 656:	0e 94 0f 04 	call	0x81e	; 0x81e <__ultoa_invert>
 65a:	88 2e       	mov	r8, r24
 65c:	86 18       	sub	r8, r6
 65e:	fb 2d       	mov	r31, r11
 660:	ff 77       	andi	r31, 0x7F	; 127
 662:	3f 2e       	mov	r3, r31
 664:	36 fe       	sbrs	r3, 6
 666:	0d c0       	rjmp	.+26     	; 0x682 <__LOCK_REGION_LENGTH__+0x282>
 668:	23 2d       	mov	r18, r3
 66a:	2e 7f       	andi	r18, 0xFE	; 254
 66c:	a2 2e       	mov	r10, r18
 66e:	89 14       	cp	r8, r9
 670:	58 f4       	brcc	.+22     	; 0x688 <__LOCK_REGION_LENGTH__+0x288>
 672:	34 fe       	sbrs	r3, 4
 674:	0b c0       	rjmp	.+22     	; 0x68c <__LOCK_REGION_LENGTH__+0x28c>
 676:	32 fc       	sbrc	r3, 2
 678:	09 c0       	rjmp	.+18     	; 0x68c <__LOCK_REGION_LENGTH__+0x28c>
 67a:	83 2d       	mov	r24, r3
 67c:	8e 7e       	andi	r24, 0xEE	; 238
 67e:	a8 2e       	mov	r10, r24
 680:	05 c0       	rjmp	.+10     	; 0x68c <__LOCK_REGION_LENGTH__+0x28c>
 682:	b8 2c       	mov	r11, r8
 684:	a3 2c       	mov	r10, r3
 686:	03 c0       	rjmp	.+6      	; 0x68e <__LOCK_REGION_LENGTH__+0x28e>
 688:	b8 2c       	mov	r11, r8
 68a:	01 c0       	rjmp	.+2      	; 0x68e <__LOCK_REGION_LENGTH__+0x28e>
 68c:	b9 2c       	mov	r11, r9
 68e:	a4 fe       	sbrs	r10, 4
 690:	0f c0       	rjmp	.+30     	; 0x6b0 <__LOCK_REGION_LENGTH__+0x2b0>
 692:	fe 01       	movw	r30, r28
 694:	e8 0d       	add	r30, r8
 696:	f1 1d       	adc	r31, r1
 698:	80 81       	ld	r24, Z
 69a:	80 33       	cpi	r24, 0x30	; 48
 69c:	21 f4       	brne	.+8      	; 0x6a6 <__LOCK_REGION_LENGTH__+0x2a6>
 69e:	9a 2d       	mov	r25, r10
 6a0:	99 7e       	andi	r25, 0xE9	; 233
 6a2:	a9 2e       	mov	r10, r25
 6a4:	09 c0       	rjmp	.+18     	; 0x6b8 <__LOCK_REGION_LENGTH__+0x2b8>
 6a6:	a2 fe       	sbrs	r10, 2
 6a8:	06 c0       	rjmp	.+12     	; 0x6b6 <__LOCK_REGION_LENGTH__+0x2b6>
 6aa:	b3 94       	inc	r11
 6ac:	b3 94       	inc	r11
 6ae:	04 c0       	rjmp	.+8      	; 0x6b8 <__LOCK_REGION_LENGTH__+0x2b8>
 6b0:	8a 2d       	mov	r24, r10
 6b2:	86 78       	andi	r24, 0x86	; 134
 6b4:	09 f0       	breq	.+2      	; 0x6b8 <__LOCK_REGION_LENGTH__+0x2b8>
 6b6:	b3 94       	inc	r11
 6b8:	a3 fc       	sbrc	r10, 3
 6ba:	11 c0       	rjmp	.+34     	; 0x6de <__LOCK_REGION_LENGTH__+0x2de>
 6bc:	a0 fe       	sbrs	r10, 0
 6be:	06 c0       	rjmp	.+12     	; 0x6cc <__LOCK_REGION_LENGTH__+0x2cc>
 6c0:	b2 14       	cp	r11, r2
 6c2:	88 f4       	brcc	.+34     	; 0x6e6 <__LOCK_REGION_LENGTH__+0x2e6>
 6c4:	28 0c       	add	r2, r8
 6c6:	92 2c       	mov	r9, r2
 6c8:	9b 18       	sub	r9, r11
 6ca:	0e c0       	rjmp	.+28     	; 0x6e8 <__LOCK_REGION_LENGTH__+0x2e8>
 6cc:	b2 14       	cp	r11, r2
 6ce:	60 f4       	brcc	.+24     	; 0x6e8 <__LOCK_REGION_LENGTH__+0x2e8>
 6d0:	b6 01       	movw	r22, r12
 6d2:	80 e2       	ldi	r24, 0x20	; 32
 6d4:	90 e0       	ldi	r25, 0x00	; 0
 6d6:	0e 94 d3 03 	call	0x7a6	; 0x7a6 <fputc>
 6da:	b3 94       	inc	r11
 6dc:	f7 cf       	rjmp	.-18     	; 0x6cc <__LOCK_REGION_LENGTH__+0x2cc>
 6de:	b2 14       	cp	r11, r2
 6e0:	18 f4       	brcc	.+6      	; 0x6e8 <__LOCK_REGION_LENGTH__+0x2e8>
 6e2:	2b 18       	sub	r2, r11
 6e4:	02 c0       	rjmp	.+4      	; 0x6ea <__LOCK_REGION_LENGTH__+0x2ea>
 6e6:	98 2c       	mov	r9, r8
 6e8:	21 2c       	mov	r2, r1
 6ea:	a4 fe       	sbrs	r10, 4
 6ec:	10 c0       	rjmp	.+32     	; 0x70e <__LOCK_REGION_LENGTH__+0x30e>
 6ee:	b6 01       	movw	r22, r12
 6f0:	80 e3       	ldi	r24, 0x30	; 48
 6f2:	90 e0       	ldi	r25, 0x00	; 0
 6f4:	0e 94 d3 03 	call	0x7a6	; 0x7a6 <fputc>
 6f8:	a2 fe       	sbrs	r10, 2
 6fa:	17 c0       	rjmp	.+46     	; 0x72a <__LOCK_REGION_LENGTH__+0x32a>
 6fc:	a1 fc       	sbrc	r10, 1
 6fe:	03 c0       	rjmp	.+6      	; 0x706 <__LOCK_REGION_LENGTH__+0x306>
 700:	88 e7       	ldi	r24, 0x78	; 120
 702:	90 e0       	ldi	r25, 0x00	; 0
 704:	02 c0       	rjmp	.+4      	; 0x70a <__LOCK_REGION_LENGTH__+0x30a>
 706:	88 e5       	ldi	r24, 0x58	; 88
 708:	90 e0       	ldi	r25, 0x00	; 0
 70a:	b6 01       	movw	r22, r12
 70c:	0c c0       	rjmp	.+24     	; 0x726 <__LOCK_REGION_LENGTH__+0x326>
 70e:	8a 2d       	mov	r24, r10
 710:	86 78       	andi	r24, 0x86	; 134
 712:	59 f0       	breq	.+22     	; 0x72a <__LOCK_REGION_LENGTH__+0x32a>
 714:	a1 fe       	sbrs	r10, 1
 716:	02 c0       	rjmp	.+4      	; 0x71c <__LOCK_REGION_LENGTH__+0x31c>
 718:	8b e2       	ldi	r24, 0x2B	; 43
 71a:	01 c0       	rjmp	.+2      	; 0x71e <__LOCK_REGION_LENGTH__+0x31e>
 71c:	80 e2       	ldi	r24, 0x20	; 32
 71e:	a7 fc       	sbrc	r10, 7
 720:	8d e2       	ldi	r24, 0x2D	; 45
 722:	b6 01       	movw	r22, r12
 724:	90 e0       	ldi	r25, 0x00	; 0
 726:	0e 94 d3 03 	call	0x7a6	; 0x7a6 <fputc>
 72a:	89 14       	cp	r8, r9
 72c:	38 f4       	brcc	.+14     	; 0x73c <__LOCK_REGION_LENGTH__+0x33c>
 72e:	b6 01       	movw	r22, r12
 730:	80 e3       	ldi	r24, 0x30	; 48
 732:	90 e0       	ldi	r25, 0x00	; 0
 734:	0e 94 d3 03 	call	0x7a6	; 0x7a6 <fputc>
 738:	9a 94       	dec	r9
 73a:	f7 cf       	rjmp	.-18     	; 0x72a <__LOCK_REGION_LENGTH__+0x32a>
 73c:	8a 94       	dec	r8
 73e:	f3 01       	movw	r30, r6
 740:	e8 0d       	add	r30, r8
 742:	f1 1d       	adc	r31, r1
 744:	80 81       	ld	r24, Z
 746:	b6 01       	movw	r22, r12
 748:	90 e0       	ldi	r25, 0x00	; 0
 74a:	0e 94 d3 03 	call	0x7a6	; 0x7a6 <fputc>
 74e:	81 10       	cpse	r8, r1
 750:	f5 cf       	rjmp	.-22     	; 0x73c <__LOCK_REGION_LENGTH__+0x33c>
 752:	22 20       	and	r2, r2
 754:	09 f4       	brne	.+2      	; 0x758 <__LOCK_REGION_LENGTH__+0x358>
 756:	42 ce       	rjmp	.-892    	; 0x3dc <vfprintf+0x24>
 758:	b6 01       	movw	r22, r12
 75a:	80 e2       	ldi	r24, 0x20	; 32
 75c:	90 e0       	ldi	r25, 0x00	; 0
 75e:	0e 94 d3 03 	call	0x7a6	; 0x7a6 <fputc>
 762:	2a 94       	dec	r2
 764:	f6 cf       	rjmp	.-20     	; 0x752 <__LOCK_REGION_LENGTH__+0x352>
 766:	f6 01       	movw	r30, r12
 768:	86 81       	ldd	r24, Z+6	; 0x06
 76a:	97 81       	ldd	r25, Z+7	; 0x07
 76c:	02 c0       	rjmp	.+4      	; 0x772 <__LOCK_REGION_LENGTH__+0x372>
 76e:	8f ef       	ldi	r24, 0xFF	; 255
 770:	9f ef       	ldi	r25, 0xFF	; 255
 772:	2b 96       	adiw	r28, 0x0b	; 11
 774:	e2 e1       	ldi	r30, 0x12	; 18
 776:	0c 94 89 04 	jmp	0x912	; 0x912 <__epilogue_restores__>

0000077a <strnlen_P>:
 77a:	fc 01       	movw	r30, r24
 77c:	05 90       	lpm	r0, Z+
 77e:	61 50       	subi	r22, 0x01	; 1
 780:	70 40       	sbci	r23, 0x00	; 0
 782:	01 10       	cpse	r0, r1
 784:	d8 f7       	brcc	.-10     	; 0x77c <strnlen_P+0x2>
 786:	80 95       	com	r24
 788:	90 95       	com	r25
 78a:	8e 0f       	add	r24, r30
 78c:	9f 1f       	adc	r25, r31
 78e:	08 95       	ret

00000790 <strnlen>:
 790:	fc 01       	movw	r30, r24
 792:	61 50       	subi	r22, 0x01	; 1
 794:	70 40       	sbci	r23, 0x00	; 0
 796:	01 90       	ld	r0, Z+
 798:	01 10       	cpse	r0, r1
 79a:	d8 f7       	brcc	.-10     	; 0x792 <strnlen+0x2>
 79c:	80 95       	com	r24
 79e:	90 95       	com	r25
 7a0:	8e 0f       	add	r24, r30
 7a2:	9f 1f       	adc	r25, r31
 7a4:	08 95       	ret

000007a6 <fputc>:
 7a6:	0f 93       	push	r16
 7a8:	1f 93       	push	r17
 7aa:	cf 93       	push	r28
 7ac:	df 93       	push	r29
 7ae:	fb 01       	movw	r30, r22
 7b0:	23 81       	ldd	r18, Z+3	; 0x03
 7b2:	21 fd       	sbrc	r18, 1
 7b4:	03 c0       	rjmp	.+6      	; 0x7bc <fputc+0x16>
 7b6:	8f ef       	ldi	r24, 0xFF	; 255
 7b8:	9f ef       	ldi	r25, 0xFF	; 255
 7ba:	2c c0       	rjmp	.+88     	; 0x814 <fputc+0x6e>
 7bc:	22 ff       	sbrs	r18, 2
 7be:	16 c0       	rjmp	.+44     	; 0x7ec <fputc+0x46>
 7c0:	46 81       	ldd	r20, Z+6	; 0x06
 7c2:	57 81       	ldd	r21, Z+7	; 0x07
 7c4:	24 81       	ldd	r18, Z+4	; 0x04
 7c6:	35 81       	ldd	r19, Z+5	; 0x05
 7c8:	42 17       	cp	r20, r18
 7ca:	53 07       	cpc	r21, r19
 7cc:	44 f4       	brge	.+16     	; 0x7de <fputc+0x38>
 7ce:	a0 81       	ld	r26, Z
 7d0:	b1 81       	ldd	r27, Z+1	; 0x01
 7d2:	9d 01       	movw	r18, r26
 7d4:	2f 5f       	subi	r18, 0xFF	; 255
 7d6:	3f 4f       	sbci	r19, 0xFF	; 255
 7d8:	31 83       	std	Z+1, r19	; 0x01
 7da:	20 83       	st	Z, r18
 7dc:	8c 93       	st	X, r24
 7de:	26 81       	ldd	r18, Z+6	; 0x06
 7e0:	37 81       	ldd	r19, Z+7	; 0x07
 7e2:	2f 5f       	subi	r18, 0xFF	; 255
 7e4:	3f 4f       	sbci	r19, 0xFF	; 255
 7e6:	37 83       	std	Z+7, r19	; 0x07
 7e8:	26 83       	std	Z+6, r18	; 0x06
 7ea:	14 c0       	rjmp	.+40     	; 0x814 <fputc+0x6e>
 7ec:	8b 01       	movw	r16, r22
 7ee:	ec 01       	movw	r28, r24
 7f0:	fb 01       	movw	r30, r22
 7f2:	00 84       	ldd	r0, Z+8	; 0x08
 7f4:	f1 85       	ldd	r31, Z+9	; 0x09
 7f6:	e0 2d       	mov	r30, r0
 7f8:	09 95       	icall
 7fa:	89 2b       	or	r24, r25
 7fc:	e1 f6       	brne	.-72     	; 0x7b6 <fputc+0x10>
 7fe:	d8 01       	movw	r26, r16
 800:	16 96       	adiw	r26, 0x06	; 6
 802:	8d 91       	ld	r24, X+
 804:	9c 91       	ld	r25, X
 806:	17 97       	sbiw	r26, 0x07	; 7
 808:	01 96       	adiw	r24, 0x01	; 1
 80a:	17 96       	adiw	r26, 0x07	; 7
 80c:	9c 93       	st	X, r25
 80e:	8e 93       	st	-X, r24
 810:	16 97       	sbiw	r26, 0x06	; 6
 812:	ce 01       	movw	r24, r28
 814:	df 91       	pop	r29
 816:	cf 91       	pop	r28
 818:	1f 91       	pop	r17
 81a:	0f 91       	pop	r16
 81c:	08 95       	ret

0000081e <__ultoa_invert>:
 81e:	fa 01       	movw	r30, r20
 820:	aa 27       	eor	r26, r26
 822:	28 30       	cpi	r18, 0x08	; 8
 824:	51 f1       	breq	.+84     	; 0x87a <__ultoa_invert+0x5c>
 826:	20 31       	cpi	r18, 0x10	; 16
 828:	81 f1       	breq	.+96     	; 0x88a <__ultoa_invert+0x6c>
 82a:	e8 94       	clt
 82c:	6f 93       	push	r22
 82e:	6e 7f       	andi	r22, 0xFE	; 254
 830:	6e 5f       	subi	r22, 0xFE	; 254
 832:	7f 4f       	sbci	r23, 0xFF	; 255
 834:	8f 4f       	sbci	r24, 0xFF	; 255
 836:	9f 4f       	sbci	r25, 0xFF	; 255
 838:	af 4f       	sbci	r26, 0xFF	; 255
 83a:	b1 e0       	ldi	r27, 0x01	; 1
 83c:	3e d0       	rcall	.+124    	; 0x8ba <__ultoa_invert+0x9c>
 83e:	b4 e0       	ldi	r27, 0x04	; 4
 840:	3c d0       	rcall	.+120    	; 0x8ba <__ultoa_invert+0x9c>
 842:	67 0f       	add	r22, r23
 844:	78 1f       	adc	r23, r24
 846:	89 1f       	adc	r24, r25
 848:	9a 1f       	adc	r25, r26
 84a:	a1 1d       	adc	r26, r1
 84c:	68 0f       	add	r22, r24
 84e:	79 1f       	adc	r23, r25
 850:	8a 1f       	adc	r24, r26
 852:	91 1d       	adc	r25, r1
 854:	a1 1d       	adc	r26, r1
 856:	6a 0f       	add	r22, r26
 858:	71 1d       	adc	r23, r1
 85a:	81 1d       	adc	r24, r1
 85c:	91 1d       	adc	r25, r1
 85e:	a1 1d       	adc	r26, r1
 860:	20 d0       	rcall	.+64     	; 0x8a2 <__ultoa_invert+0x84>
 862:	09 f4       	brne	.+2      	; 0x866 <__ultoa_invert+0x48>
 864:	68 94       	set
 866:	3f 91       	pop	r19
 868:	2a e0       	ldi	r18, 0x0A	; 10
 86a:	26 9f       	mul	r18, r22
 86c:	11 24       	eor	r1, r1
 86e:	30 19       	sub	r19, r0
 870:	30 5d       	subi	r19, 0xD0	; 208
 872:	31 93       	st	Z+, r19
 874:	de f6       	brtc	.-74     	; 0x82c <__ultoa_invert+0xe>
 876:	cf 01       	movw	r24, r30
 878:	08 95       	ret
 87a:	46 2f       	mov	r20, r22
 87c:	47 70       	andi	r20, 0x07	; 7
 87e:	40 5d       	subi	r20, 0xD0	; 208
 880:	41 93       	st	Z+, r20
 882:	b3 e0       	ldi	r27, 0x03	; 3
 884:	0f d0       	rcall	.+30     	; 0x8a4 <__ultoa_invert+0x86>
 886:	c9 f7       	brne	.-14     	; 0x87a <__ultoa_invert+0x5c>
 888:	f6 cf       	rjmp	.-20     	; 0x876 <__ultoa_invert+0x58>
 88a:	46 2f       	mov	r20, r22
 88c:	4f 70       	andi	r20, 0x0F	; 15
 88e:	40 5d       	subi	r20, 0xD0	; 208
 890:	4a 33       	cpi	r20, 0x3A	; 58
 892:	18 f0       	brcs	.+6      	; 0x89a <__ultoa_invert+0x7c>
 894:	49 5d       	subi	r20, 0xD9	; 217
 896:	31 fd       	sbrc	r19, 1
 898:	40 52       	subi	r20, 0x20	; 32
 89a:	41 93       	st	Z+, r20
 89c:	02 d0       	rcall	.+4      	; 0x8a2 <__ultoa_invert+0x84>
 89e:	a9 f7       	brne	.-22     	; 0x88a <__ultoa_invert+0x6c>
 8a0:	ea cf       	rjmp	.-44     	; 0x876 <__ultoa_invert+0x58>
 8a2:	b4 e0       	ldi	r27, 0x04	; 4
 8a4:	a6 95       	lsr	r26
 8a6:	97 95       	ror	r25
 8a8:	87 95       	ror	r24
 8aa:	77 95       	ror	r23
 8ac:	67 95       	ror	r22
 8ae:	ba 95       	dec	r27
 8b0:	c9 f7       	brne	.-14     	; 0x8a4 <__ultoa_invert+0x86>
 8b2:	00 97       	sbiw	r24, 0x00	; 0
 8b4:	61 05       	cpc	r22, r1
 8b6:	71 05       	cpc	r23, r1
 8b8:	08 95       	ret
 8ba:	9b 01       	movw	r18, r22
 8bc:	ac 01       	movw	r20, r24
 8be:	0a 2e       	mov	r0, r26
 8c0:	06 94       	lsr	r0
 8c2:	57 95       	ror	r21
 8c4:	47 95       	ror	r20
 8c6:	37 95       	ror	r19
 8c8:	27 95       	ror	r18
 8ca:	ba 95       	dec	r27
 8cc:	c9 f7       	brne	.-14     	; 0x8c0 <__ultoa_invert+0xa2>
 8ce:	62 0f       	add	r22, r18
 8d0:	73 1f       	adc	r23, r19
 8d2:	84 1f       	adc	r24, r20
 8d4:	95 1f       	adc	r25, r21
 8d6:	a0 1d       	adc	r26, r0
 8d8:	08 95       	ret

000008da <__prologue_saves__>:
 8da:	2f 92       	push	r2
 8dc:	3f 92       	push	r3
 8de:	4f 92       	push	r4
 8e0:	5f 92       	push	r5
 8e2:	6f 92       	push	r6
 8e4:	7f 92       	push	r7
 8e6:	8f 92       	push	r8
 8e8:	9f 92       	push	r9
 8ea:	af 92       	push	r10
 8ec:	bf 92       	push	r11
 8ee:	cf 92       	push	r12
 8f0:	df 92       	push	r13
 8f2:	ef 92       	push	r14
 8f4:	ff 92       	push	r15
 8f6:	0f 93       	push	r16
 8f8:	1f 93       	push	r17
 8fa:	cf 93       	push	r28
 8fc:	df 93       	push	r29
 8fe:	cd b7       	in	r28, 0x3d	; 61
 900:	de b7       	in	r29, 0x3e	; 62
 902:	ca 1b       	sub	r28, r26
 904:	db 0b       	sbc	r29, r27
 906:	0f b6       	in	r0, 0x3f	; 63
 908:	f8 94       	cli
 90a:	de bf       	out	0x3e, r29	; 62
 90c:	0f be       	out	0x3f, r0	; 63
 90e:	cd bf       	out	0x3d, r28	; 61
 910:	09 94       	ijmp

00000912 <__epilogue_restores__>:
 912:	2a 88       	ldd	r2, Y+18	; 0x12
 914:	39 88       	ldd	r3, Y+17	; 0x11
 916:	48 88       	ldd	r4, Y+16	; 0x10
 918:	5f 84       	ldd	r5, Y+15	; 0x0f
 91a:	6e 84       	ldd	r6, Y+14	; 0x0e
 91c:	7d 84       	ldd	r7, Y+13	; 0x0d
 91e:	8c 84       	ldd	r8, Y+12	; 0x0c
 920:	9b 84       	ldd	r9, Y+11	; 0x0b
 922:	aa 84       	ldd	r10, Y+10	; 0x0a
 924:	b9 84       	ldd	r11, Y+9	; 0x09
 926:	c8 84       	ldd	r12, Y+8	; 0x08
 928:	df 80       	ldd	r13, Y+7	; 0x07
 92a:	ee 80       	ldd	r14, Y+6	; 0x06
 92c:	fd 80       	ldd	r15, Y+5	; 0x05
 92e:	0c 81       	ldd	r16, Y+4	; 0x04
 930:	1b 81       	ldd	r17, Y+3	; 0x03
 932:	aa 81       	ldd	r26, Y+2	; 0x02
 934:	b9 81       	ldd	r27, Y+1	; 0x01
 936:	ce 0f       	add	r28, r30
 938:	d1 1d       	adc	r29, r1
 93a:	0f b6       	in	r0, 0x3f	; 63
 93c:	f8 94       	cli
 93e:	de bf       	out	0x3e, r29	; 62
 940:	0f be       	out	0x3f, r0	; 63
 942:	cd bf       	out	0x3d, r28	; 61
 944:	ed 01       	movw	r28, r26
 946:	08 95       	ret

00000948 <_exit>:
 948:	f8 94       	cli

0000094a <__stop_program>:
 94a:	ff cf       	rjmp	.-2      	; 0x94a <__stop_program>
